{"_path":"/no-seo/hashcode-java-9f3be809-394c-4bee-8e67-21a2ca50e52f","_dir":"no-seo","_draft":false,"_partial":false,"_locale":"","title":"O metodo hashCode() da linguagem de programação Java.","description":"O hashCode() é a função de hash padrão do Java. Porém, ela é, de certa forma bastante exotica se comparado ao padrão que geralmente as funções hash seguem, padrões tais como:","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"o-metodo-hashcode-da-linguagem-de-programação-java"},"children":[{"type":"text","value":"O metodo "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" da linguagem de programação Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" é a função de hash padrão do Java. Porém, ela é, de certa forma bastante exotica se comparado ao padrão que geralmente as funções hash seguem, padrões tais como:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ao invés do padrão que é gerar uma cadeia de caracteres, o "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" gera um número inteiro;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ao invés do padrão de ter uma unicidade forte, por conta do "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" usar um número inteiro, sua unicidade não é muito forte (o que gera colisões de hash);"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ao invés do padrão de ter tamanho fixo, o "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" não se preocupa em ter tamanho fixo;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ao invés do mesmo dado gerar sempre o mesmo hash, o "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" (apesar de ser casos raros) nem sempre "},{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Object.html#hashCode()","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"gera os mesmos hashes"}]},{"type":"text","value":" para as mesmas entradas dependendo da execução da aplicação."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mas essas coisas não nescessariamente são um problema, afinal existem diferentes tipos de hash, e cada um é para um uso especifico, no caso de "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" é ter uma velocidade rápida para gerar hash sem nescessariamente precisar ter alta unicidade, ou sem nescessariamente ter tamanho fixo. Ou então o caso de não manter consistencia entre execuções (que depende de fatores diversos, como OS, JVM e GC), não é nescessariamente um problemas pois o "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" é feito para se trabalhar nas estruturas de dados do Java durante a execução da aplicação, e não para persistir esses hashes."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:no-seo:hashcode-java-9f3be809-394c-4bee-8e67-21a2ca50e52f.md","_source":"content","_file":"no-seo/hashcode-java-9f3be809-394c-4bee-8e67-21a2ca50e52f.md","_extension":"md"}