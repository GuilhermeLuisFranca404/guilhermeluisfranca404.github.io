{"_path":"/articles/estrutura-de-dados-java/queue/priority-queue","_dir":"queue","_draft":false,"_partial":false,"_locale":"","title":"PriorityQueue","description":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/priority-queue.png","alt":"PriorityQueue Java.","width":3140,"height":613},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"PriorityQueue"},{"name":"description","content":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, Queue, PriorityQueue"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/priority-queue.png"},{"name":"og:image:width","content":"3140"},{"name":"og:image:height","content":"613"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"priorityqueue"},"children":[{"type":"text","value":"PriorityQueue."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h2","props":{"id":"priorityqueue-como-funciona-queue"},"children":[{"type":"text","value":"PriorityQueue. Como funciona "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Queue"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Como visto na estrutura de dados "},{"type":"element","tag":"a","props":{"href":"articles/estrutura-de-dados-java/list/stack","target":"blank"},"children":[{"type":"text","value":"Stack"}]},{"type":"text","value":", a Stack opera com o princípio LIFO (Last-In-First-Out), onde o último elemento a entrar é o primeiro a sair. Agora, vamos direcionar nossa atenção para a intrigante PriorityQueue."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao contrário da Stack, a PriorityQueue segue o princípio FIFO (First-In-First-Out). Nesse contexto, o primeiro elemento a entrar é o último a sair, replicando o comportamento de uma fila comum. Essa reviravolta na lógica de ordenação é útil em situações em que a prioridade dos elementos é crucial. O que é útil em situações em que a prioridade dos elementos é crucial."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"exemplo em código:"}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"var numbersQueue = new PriorityQueue<Integer>();\nnumbersQueue.add(2);\nnumbersQueue.add(3);\nnumbersQueue.add(5);\n\nSystem.out.println(numbersQueue);\n\nnumbersQueue.poll();\n\nSystem.out.println(numbersQueue);\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersQueue "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"PriorityQueue"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Integer"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersQueue."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersQueue."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersQueue."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersQueue);\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersQueue."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"poll"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersQueue);"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[2, 3, 5]"}]},{"type":"text","value":" "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \n"},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[3, 5]"}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"PriorityQueue Java","src":"/static/images/articles/estrutura-de-dados-java/priority-queue.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"vantagens-e-desvantagens"},"children":[{"type":"text","value":"Vantagens e Desvantagens"}]},{"type":"element","tag":"h5","props":{"id":"vantagens"},"children":[{"type":"text","value":"Vantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Mantém os elementos em ordem natural ou com base em um comparador, permitindo acesso eficiente ao elemento de maior prioridade."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Implementa uma fila de prioridade eficiente. FIFO - First In, First Out."}]}]},{"type":"element","tag":"h5","props":{"id":"desvantagens"},"children":[{"type":"text","value":"Desvantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Não fornece acesso eficiente a elementos arbitrários; a remoção é restrita ao elemento de maior prioridade."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" A remoção e atualização de elementos específicos são menos eficientes que em outras estruturas, em termos de flexibilidade."}]}]},{"type":"element","tag":"h4","props":{"id":"uso-comum"},"children":[{"type":"text","value":"Uso comum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Implementação de filas de prioridade em algoritmos como Dijkstra ou algoritmos de roteamento."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Cenário de uso:"}]},{"type":"text","value":" Em um sistema de despacho de tarefas, uma PriorityQueue pode ser usada para priorizar e executar tarefas com base em sua urgência ou importância. Como o "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/pt/sqs/","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"SQS da AWS"}]},{"type":"text","value":", onde as requisições são processadas por ordem de chegada."}]},{"type":"element","tag":"next-content","props":{"content":"ArrayDeque","linkcontent":"/articles/estrutura-de-dados-java/queue/array-deque"},"children":[]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":".monokai{color:#F8F8F2;background:#272822;}.ct-049000{color:#66D9EF;font-style:italic;}.ct-183901{color:#F8F8F2;}.ct-268635{color:#F92672;}.ct-253592{color:#A6E22E;}.ct-674544{color:#AE81FF;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"priorityqueue-como-funciona-queue","depth":2,"text":"PriorityQueue. Como funciona Queue."},{"id":"vantagens-e-desvantagens","depth":2,"text":"Vantagens e Desvantagens"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:queue:priority-queue.md","_source":"content","_file":"articles/estrutura-de-dados-java/queue/priority-queue.md","_extension":"md"}