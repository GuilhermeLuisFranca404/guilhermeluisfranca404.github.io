{"generatedAt":1725994120102,"generateTime":6793,"contents":[{"_path":"/articles/estrutura-de-dados-java","_dir":"articles","_draft":false,"_partial":false,"_locale":"","title":"Estrutura de Dados com Java","description":"Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/dados-estruturados-x-nao-estruturados.png","alt":"Dados Estruturados x Não Estruturados.","width":2244,"height":1132},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"property":"og:title","content":"Estrutura de Dados com Java."},{"name":"description","content":"Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, List, Listas, Stack, Pilha, Árvores, Trees, Filas, Queues, Mapas, Maps, Set, Algoritmos e Estrutura de Dados Java"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/dados-estruturados-x-nao-estruturados.png"},{"name":"og:image:width","content":"2244"},{"name":"og:image:height","content":"1132"},{"name":"og:image:type","content":"image/png"},{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"h2","props":{"style":"font-size:1em;text-align:center;padding-top:0em!important;border-bottom:0px","id":"data-structures-algorithms-programs-de-niklaus-wirth"},"children":[{"type":"text","value":"Data Structures + Algorithms = Programs de Niklaus Wirth."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Dados Estruturados x Não Estruturados","src":"/static/images/articles/estrutura-de-dados-java/dados-estruturados-x-nao-estruturados.png","quality":"80","width":"700px"},"children":[]}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"main","props":{},"children":[{"type":"element","tag":"h2","props":{"id":"por-que-estudar"},"children":[{"type":"text","value":"Por que estudar?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Poderia responder dizendo o óbvio, que estrutura de dados nos ensina sobre eficiência algorítmica, otimização de memória, "},{"type":"element","tag":"s","props":{},"children":[{"type":"text","value":"entrevistas para BigTechs"}]},{"type":"text","value":", bla bla bla. No entanto, essa abordagem muitas vezes torna o assunto tão cativante quanto estudar matemática apenas para passar em uma prova, transformando a motivação em uma mera necessidade pragmática."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Sinceramente, eu gostaria de conseguir persuadi-los a estudar o assunto, porém a de ser essa uma tarefa dispendiosa, visto que seu estudo, para muitos, é um caminho penoso sem ultilidade imediata."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Então, por que estudar?"}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Fique postulado que: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"estruturas de dados faz parte da fundação de um bom progrador"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Enfase em "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"fundação"}]},{"type":"text","value":". Essa é a disciplina que visa estudar como os dados são organizados, acessados e manipulados na memória."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Quantas vezes você já se viu sem entender por que um código funcionava? A sensação de usar uma "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"lib"}]},{"type":"text","value":" sem compreender seu funcionamento? De vez em quando tudo bem, mas se isso se torna uma constante, algo está errado, especialmente se essa sensação se torna uma conformidade."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Seguindo esse raciocinio. Entender o minimo de estrutura de dados é crucial, facilita a compreensão de como as coisas funcionam por de baixo dos panos, melhorando a capacidade de aprender e se adaptar a novas tecnologias."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"De qualquer forma, fica aqui minha provocação, caso seja uma pessoa de brio, que admite mas não se conforma com a ignorância, que não quer seguir sendo um analfabeto funcional em programação, convido a continuar a leitura."}]},{"type":"element","tag":"h2","props":{"id":"collections-framework"},"children":[{"type":"text","value":"Collections Framework."}]},{"type":"element","tag":"h6","props":{"id":"ok-exagerei-um-pouco-acima-ficou-um-pouco-sensacionalista-mas-vamos-lá"},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Ok, exagerei um pouco acima. Ficou um pouco sensacionalista. Mas vamos lá."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mesmo que, em linguagens de alto nível, geralmente usemos as estruturas que a própria linguagem nos fornece, a compreensão de seus funcionamentos é de suma importância. Portanto, o conteúdo desta série de anotações está centrado no "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"estudo das estruturas de dados do "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Collections Framework"}]}]},{"type":"text","value":" da linguagem de programação Java."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Collections Framework"}]},{"type":"text","value":" do Java é um conjunto de classes e interfaces que fornecem estruturas de dados de alto nível eficientes para armazenar e manipular objetos em Java. É uma biblioteca onde ficam todas as estruturas de dados padrão da linguagem que podem ser reutilizadas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"principais interfaces e classes"}]},{"type":"text","value":" que vamos estudar são estas (mas são apenas o básico e o mais usado; atualmente "},{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/overview-tree.html","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"essa lista"}]},{"type":"text","value":" é muito mais extensa):"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"hierarquia elementar do "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Collections Framework"}]},{"type":"text","value":":"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Hierarquia rudimentar do Collections Framework do Java.","src":"/static/images/articles/estrutura-de-dados-java/collections-framework-java.png"},"children":[]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Lembrando que essa hierarquia é elementar, rudimentar, é apenas uma simplificação, não é a hierarquia completa nem a correta. "},{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/overview-tree.html","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"Confira a verdadeira aqui"}]},{"type":"text","value":". Estão aqui apenas as estruturas de dados que considero como as principais, são também as que estudaremos ao longo desta série."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Opcional: "},{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/javase/tutorial/collections/intro/index.html#benefits-of-the-java-collections-framework","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"Alguns beneficios do Collections Framework (clique)"}]}]}]},{"type":"element","tag":"details","props":{},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"h5","props":{"style":"display: inline;cursor:pointer;","id":"curiosidade-interessante-o-nascimento-das-estruturas-de-dados-elementares-em-java-clique"},"children":[{"type":"text","value":"\n    Curiosidade Interessante: O Nascimento das Estruturas de Dados Elementares em Java. (clique)\n  "}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"No embrião do Java, originalmente batizado como "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Oak"}]},{"type":"text","value":", as únicas estruturas de dados elementares disponíveis eram o venerável "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Vector"}]},{"type":"text","value":" e o confiável "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Hashtable"}]},{"type":"text","value":". Uma nota curiosa: o "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Hashtable"}]},{"type":"text","value":", na época, não seguia o padrão de nomenclatura atual, que deveria ser chamado de "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"HashTable"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Entretanto, à medida que Java evoluiu e enfrentou desafios mais complexos, a demanda por uma variedade mais ampla de estruturas de dados cresceu. Isso culminou no desenvolvimento do tão essencial "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Collections Framework"}]},{"type":"text","value":" no Java 1.2."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Uma curiosidade que frequentemente causa confusão (eu mesmo já me vi nessa situação) é a relação da interface "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Map"}]},{"type":"text","value":" com o "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Collections Framework"}]},{"type":"text","value":". Ao contrário das outras estruturas de dados, "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Map"}]},{"type":"text","value":" não estende diretamente de "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"java.util.Collection"}]},{"type":"text","value":", gerando um equívoco comum. No entanto, é importante salientar que, sim, "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Map"}]},{"type":"text","value":" é parte integral do "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Collections Framework"}]},{"type":"text","value":". "},{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/javase/8/docs/technotes/guides/collections/designfaq.html#a14","target":"blank","rel":["nofollow"]},"children":[{"type":"text","value":"O porque de Map não estender de Collections é visto aqui"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h1","props":{"id":"vamos-as-estruturas"},"children":[{"type":"text","value":"Vamos as estruturas."}]},{"type":"element","tag":"next-content","props":{"content":"Começe aqui! (interface List)","linkcontent":"/articles/estrutura-de-dados-java/list"},"children":[]},{"type":"element","tag":"div","props":{"className":["clear-both"]},"children":[]},{"type":"element","tag":"h4","props":{"id":"nota-para-o-leitor"},"children":[{"type":"text","value":"Nota para o leitor "},{"type":"element","tag":"i","props":{"className":["pi","pi-exclamation-triangle"],"style":"color: yellow; font-size: 25px;"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Como mencionado, "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"\"o conteúdo desta série de anotações está centrado no estudo das estruturas de dados do "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Collections Framework"}]},{"type":"text","value":" da linguagem de programação Java\""}]},{"type":"text","value":". Portanto "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"não irei explicar metódo a metódo"}]},{"type":"text","value":", meu objetivo é destrinchar as estruturas de dados sem a sobrecarga de explicações monótonas sobre cada método do "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Collections Framework"}]},{"type":"text","value":". Afinal, quem precisa de redundância quando a magia está na descoberta?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Se surgir alguma interrogação durante os exemplos de código, relaxe! "},{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/links-ref","target":"_blank"},"children":[{"type":"text","value":"Aqui estão links diretos para a documentação oficial"}]},{"type":"text","value":". Mantenha esses links prontos em guias adicionais, para uma consulta relâmpago se necessário."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Motivo para isso: Não quero recriar o que já existe. Este não é mais um daqueles artigos \"clone\". O que pretendo é destrinchar as estruturas de dados, não o "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Collections Framework"}]},{"type":"text","value":" em si, ele será apenas para facilitar as explicações."}]},{"type":"element","tag":"h4","props":{"id":"dicas"},"children":[{"type":"text","value":"Dicas 💡"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Esta série sobre estruturas de dados foi projetada para quem já possui conhecimento intermediário em programação (nível júnior). Recomenda-se ter familiaridade com lógica de programação, alguma linguagem de programação e conceitos de Programação Orientada a Objetos (POO), além de noções básicas de estruturas. Se você nunca teve contato com estruturas de dados e é iniciante na programação, é altamente recomendável buscar outros recursos para aprendizado. Uma simples série de artigos não proporcionará uma base sólida para iniciantes. Um material que posso recomendar é o livro "},{"type":"element","tag":"a","props":{"href":"https://www.amazon.com.br/Entendendo-Algoritmos-Ilustrado-Programadores-Curiosos/dp/8575225634","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"Entendendo Algoritmos: Um Guia Ilustrado Para Programadores e Outros Curiosos"}]},{"type":"text","value":" (um excelente recurso). Se você já é um programador pleno ou sênior, esta série pode não oferecer desafios adequados. Para seu caso, recomenda-se um livro como o de Cormen "},{"type":"element","tag":"a","props":{"href":"https://www.amazon.com.br/Introduction-Algorithms-Fourth-Thomas-Cormen/dp/026204630X/ref=sr_1_2","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"Introduction to Algorithms"}]},{"type":"text","value":" (imperdível para se aprofundar no assunto)."}]},{"type":"element","tag":"next-content","props":{"content":"Começe aqui! (interface List)","linkcontent":"/articles/estrutura-de-dados-java/list"},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"data-structures-algorithms-programs-de-niklaus-wirth","depth":2,"text":"Data Structures + Algorithms = Programs de Niklaus Wirth."},{"id":"por-que-estudar","depth":2,"text":"Por que estudar?"},{"id":"collections-framework","depth":2,"text":"Collections Framework."}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:index.md","_source":"content","_file":"articles/estrutura-de-dados-java/index.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/links-ref","_dir":"estrutura-de-dados-java","_draft":false,"_partial":false,"_locale":"","title":"Olá hehe","description":"Use para consultar metódos especificos das estruturas, que usarei durante os exemplos de código.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"olá-hehe"},"children":[{"type":"text","value":"Olá hehe"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Use para consultar metódos especificos das estruturas, que usarei durante os exemplos de código."}]},{"type":"element","tag":"h4","props":{"id":"list"},"children":[{"type":"text","value":"List"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/ArrayList.html#method-summary","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"ArrayList"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/LinkedList.html#method-summary","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"LinkedList"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Vector.html#method-summary","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"Vector"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Stack.html#method-summary","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"Stack"}]}]}]},{"type":"element","tag":"h4","props":{"id":"queue"},"children":[{"type":"text","value":"Queue"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/PriorityQueue.html#method-summary","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"PriorityQueue"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/ArrayDeque.html#method-summary","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"ArrayDeque"}]}]}]},{"type":"element","tag":"h4","props":{"id":"map"},"children":[{"type":"text","value":"Map"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/HashMap.html#method-summary","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"HashMap"}]}]}]},{"type":"element","tag":"h4","props":{"id":"set"},"children":[{"type":"text","value":"Set"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/HashSet.html#method-summary","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"HashSet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/LinkedHashSet.html#method-summary","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"LinkedHashSet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/TreeSet.html#method-summary","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"TreeSet"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:links-ref.md","_source":"content","_file":"articles/estrutura-de-dados-java/links-ref.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/list/array-list","_dir":"list","_draft":false,"_partial":false,"_locale":"","title":"ArrayList","description":"ArrayList vs array | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/array-list-redimensionamento.png","alt":"ArrayList Java.","width":2964,"height":1261},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"ArrayList"},{"name":"description","content":"ArrayList vs array | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"ArrayList vs array | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"ArrayList vs array | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"ArrayList vs array | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"ArrayList vs array | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, List, Listas, ArrayList, ArrayList vs array"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/array-list-redimensionamento.png"},{"name":"og:image:width","content":"2964"},{"name":"og:image:height","content":"1261"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"arraylist"},"children":[{"type":"text","value":"ArrayList."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nota: Nesta série sobre estruturas de dados, é natural que a apresentação da primeira delas seja um tanto densa. Não se preocupe, pois isso ocorrerá apenas nesta introdução. Recomendo enfaticamente que se familiarize plenamente com todos os conceitos aqui apresentados, pois estes servirão como base essencial para o entendimento das próximas estruturas de dados, sem serem minuciosamente destrinchadas como nesta introdução."}]}]},{"type":"element","tag":"h2","props":{"id":"arraylist-vs-array-qual-a-diferença"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"ArrayList"}]},{"type":"text","value":" vs "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"array"}]},{"type":"text","value":". Qual a diferença?"}]},{"type":"element","tag":"h5","props":{"id":"relembrando-array"},"children":[{"type":"text","value":"Relembrando array"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.w3schools.com/java/java_arrays.asp","target":"blank","rel":["nofollow"]},"children":[{"type":"text","value":"Relembrando"}]},{"type":"text","value":", os arrays são uma sequencia de valores do mesmo tipo, "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"são imutáveis"}]},{"type":"text","value":" (estáticos). E são usados para armazenar vários valores em uma única variável, em vez de declarar variáveis separadas para cada valor."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"exemplo em código:"}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"int[] numbersArray = {2, 3, 5, 7};\nSystem.out.println(\"third element: \" + numbersArray[3]);\nSystem.out.println(\"length of array: \" + numbersArray.length);\n\nnumbersArray[3] numbersArray[3] = 11;\nSystem.out.println(\"new third element: \" + numbersArray[3]);\n\ntry {\n  numbersArray[4] = 13; // error (exceeded size of the array)\n} catch(ArrayIndexOutOfBoundsException e) {\n  System.err.println(\"length max array is: \"+ numbersArray.length);\n}\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"[] numbersArray "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" {"}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"7"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"};\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"third element: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersArray["}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"]);\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"length of array: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersArray.length);\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersArray["}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"] numbersArray["}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"] "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"11"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":";\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"new third element: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersArray["}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"]);\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"try"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"  numbersArray["}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"4"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"] "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"13"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"; "}]},{"type":"element","tag":"span","props":{"class":"ct-971041"},"children":[{"type":"text","value":"// error (exceeded size of the array)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"} "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"catch"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"ArrayIndexOutOfBoundsException"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-678589"},"children":[{"type":"text","value":"e"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":") {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"  System.err."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"length max array is: \""}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersArray.length);\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"third element: 7"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n  length of array: 4"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n  new third element: 11"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n  length max array is: 4"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Á "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"exception"}]},{"type":"text","value":", ocorre porque o array é estático, ou seja, não é possível adicionar novos elementos além do que é permitido pelo seu tamanho original."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"array Java","position":"auto","quality":"40","src":"/static/images/articles/estrutura-de-dados-java/array.png","width":"50%"},"children":[]}]},{"type":"element","tag":"h5","props":{"id":"diferença-entre-array-e-arraylist"},"children":[{"type":"text","value":"Diferença entre array e ArrayList"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A diferença mais significativa entre o array e o ArrayList é que o "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"array é estático"}]},{"type":"text","value":" e o "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"ArrayList é dinâmico"}]},{"type":"text","value":". Isso significa que os arrays têm um tamanho fixo determinado na sua criação, logo, não podemos inserir novos elementos. Diferentemente do ArrayList, que serve exatamente para adicionar novos elementos."}]},{"type":"element","tag":"h2","props":{"id":"arraylist-como-funciona-o-resizable-array"},"children":[{"type":"text","value":"ArrayList. Como funciona o "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Resizable Array"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A estruturas de dados do ArrayList é chamada de "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Resizable Array"}]},{"type":"text","value":" (ou Array Dinâmico), também denominado simplesmente como Lista. Isso implica que ela cresce ou diminui dinamicamente à medida que os elementos são adicionados ou removidos. Em essência, o ArrayList se redimensiona automaticamente, sendo esta uma de suas principais vantagens."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Outra vantagem é que, por ser uma classe do Collections Framework, essa estrutura de dados implementa diversos métodos, métodos esses que auxiliam na manipulação da estrutura de dados. Porém, não vou detalhar esses métodos, "},{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java#nota-para-o-leitor","target":"blank"},"children":[{"type":"text","value":"como já explicado aqui"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para comprovar isso (redimensionamento automático), vamos replicar o mesmo exemplo do código acima do array, só que agora com ArrayList."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"código:"}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"final var __ = \" ; size: \";\nvar numbersList = new ArrayList<Integer>();\n\nnumbersList.add(2);\nnumbersList.add(3);\nnumbersList.add(5);\nnumbersList.add(7);\nSystem.out.println(numbersList+__+numbersList.size());\n\nnumbersList.add(11);// no error (auto resize)\nSystem.out.println(numbersList+__+numbersList.size());\n\nnumbersList.set(2, null);\nnumbersList.remove(4);\nSystem.out.println(numbersList+__+numbersList.size());\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"final"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" __ "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\" ; size: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":";\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersList "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"ArrayList"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Integer"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"7"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersList"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"__"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"size"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"11"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");"}]},{"type":"element","tag":"span","props":{"class":"ct-971041"},"children":[{"type":"text","value":"// no error (auto resize)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersList"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"__"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"size"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"set"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"null"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"remove"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"4"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersList"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"__"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"size"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[2, 3, 5, 7]"}]},{"type":"text","value":" ; size: 4 "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \n"},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[2, 3, 5, 7, 11]"}]},{"type":"text","value":" ; size: 5 "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \n"},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[2, 3, null, 7]"}]},{"type":"text","value":" ; size: 4"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Como podemos ver, agora foi possível adicionar um novo elemento além do seu tamanho original. Mas como nada é bala de prata, ArrayList também tem suas desvantagens, dentre elas, a "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"desvantagem de \"memória não utilizada\""}]},{"type":"text","value":" é a principal. Mas o que seria isso? Antes de tudo, para uma melhor didática, veja essa imagem mental do ArrayList do mesmo código acima."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"ArrayList Java","position":"auto","quality":"50","src":"/static/images/articles/estrutura-de-dados-java/array-list.png","width":"75%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Agora que já tem uma imagem mental do que é a estrutura de dados "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Resizable Array"}]},{"type":"text","value":", podemos entender a desvantagem do ArrayList: a memória não utilizada, também conhecida como \"capacidade ociosa\" ou \"capacidade de reserva\", e o porquê disso."}]},{"type":"element","tag":"h2","props":{"id":"arraylist-como-funciona-seu-redimensionamento-automático"},"children":[{"type":"text","value":"ArrayList: Como funciona seu redimensionamento automático."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Basicamente, o motivo do ArrayList usar mais memória do que o esperado é o seu redimensionamento automático. Pense da seguinte forma: como ter uma estrutura de dados que pode armazenar mais elementos do que seu tamanho original? Como isso é possível? A solução está na pré-alocação de espaço, garantindo que a estrutura de dados esteja pronta para receber novos elementos."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mas, e se o número de elementos adicionados ultrapassar a capacidade pré-alocada? Não se preocupe, o ArrayList se antecipa e pré-aloca ainda mais espaço. O mesmo ocorre quando você remove elementos, reduzindo o tamanho conforme necessário."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Claro, isso não funciona magicamente. Infelizmente, não podemos simplesmente adicionar ou remover bytes no ArrayList. O ArrayList usa internamente um array, e, como não é possível adicionar ou remover bytes diretamente no array, naturalmente não é possível fazer o mesmo com ArrayList."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então, como o ArrayList, mesmo com espaço pré-alocado, consegue adicionar mais espaço sem perder os elementos? A resposta está na \"realocação\" do array interno. Quando atinge a capacidade máxima, o ArrayList cria um novo array interno com capacidade maior e, em seguida, copia os elementos do array antigo para o novo array."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nota: Você pode conferir essas informações (ArrayList realoca o array interno) no seu código fonte. "},{"type":"element","tag":"a","props":{"href":"https://github.com/openjdk/jdk/blob/ecd25e7d6f9d69f9dbdbff0a4a9b9d6b19288593/src/java.base/share/classes/java/util/ArrayList.java#L232","target":"blank","rel":["nofollow"]},"children":[{"type":"text","value":"Veja aqui"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"E qual é o tamanho pré-alocado pelo ArrayList? Bem, isso depende de vários fatores, como o número de elementos, o tipo utilizado, a versão do Java, a JVM e até o Garbage Collector. Em geral, o ArrayList opera com 50% a mais de espaço pré-alocado além do seu tamanho original, e, em alguns casos, até o dobro."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Caso não tenha ficado muito intuitiva a explicação de ArrayList realocar array interno, sem problemas. Vamos explicar no código e, depois, um diagrama, uma imagem mental deste código."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Código:"}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"final var __ = \" ; size: \";\nvar numbersList = new ArrayList<Integer>(12);\n\nnumbersList.addAll(Arrays.asList(\n  2,3,5,7,11,13,17,19,23,29\n));\nSystem.out.println(numbersList+__+numbersList.size());\n\nnumbersList.addAll(Arrays.asList(\n  31,37,41,43,47\n));\nSystem.out.println(numbersList+__+numbersList.size());\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"final"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" __ "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\" ; size: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":";\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersList "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"ArrayList"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Integer"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"12"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"addAll"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(Arrays."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"asList"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"7"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"11"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"13"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"17"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"19"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"23"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"29\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"));\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersList"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"__"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"size"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"addAll"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(Arrays."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"asList"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"31"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"37"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"41"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"43"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"47\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"));\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersList"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"__"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"size"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[2, 3, 5, 7, 11, 13, 17, 19, 23, 29]"}]},{"type":"text","value":" ; size: 10 "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \n"},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47]"}]},{"type":"text","value":" ; size: 15"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"ArrayList Redimensionamento Java","position":"auto","quality":"50","src":"/static/images/articles/estrutura-de-dados-java/array-list-redimensionamento.png","width":"75%"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"vantagens-e-desvantagens"},"children":[{"type":"text","value":"Vantagens e Desvantagens"}]},{"type":"element","tag":"h5","props":{"id":"vantagens"},"children":[{"type":"text","value":"Vantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Possui redimensionamento automático."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Acesso direto aos elementos através de índices, o que resulta em tempos de acesso constantes."}]}]},{"type":"element","tag":"h5","props":{"id":"desvantagens"},"children":[{"type":"text","value":"Desvantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" O redimensionamento traz uma complexidade espacial notável devido à pre-alocação."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":"  Ineficiente para inserções e remoções frequentes, pois requer realocação de memória."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" -"}]},{"type":"text","value":"  A inserção no meio da lista é custosa, pois requer o deslocamento de elementos subsequentes."}]}]},{"type":"element","tag":"h4","props":{"id":"uso-comum"},"children":[{"type":"text","value":"Uso comum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Armazenamento e recuperação eficiente de dados sequenciais."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Cenário de uso:"}]},{"type":"text","value":" Em um sistema de gerenciamento de biblioteca, um ArrayList pode ser usado para armazenar a lista de livros em uma prateleira, permitindo fácil acesso e manipulação dos livros."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para casos de extremos de acesso a elementos, usariamos TreeSet."}]}]},{"type":"element","tag":"next-content","props":{"content":"LinkedList","linkcontent":"/articles/estrutura-de-dados-java/list/linked-list"},"children":[]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":".monokai{color:#F8F8F2;background:#272822;}.ct-049000{color:#66D9EF;font-style:italic;}.ct-183901{color:#F8F8F2;}.ct-268635{color:#F92672;}.ct-674544{color:#AE81FF;}.ct-253592{color:#A6E22E;}.ct-141567{color:#E6DB74;}.ct-971041{color:#88846F;}.ct-678589{color:#FD971F;font-style:italic;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"arraylist-vs-array-qual-a-diferença","depth":2,"text":"ArrayList vs array. Qual a diferença?"},{"id":"arraylist-como-funciona-o-resizable-array","depth":2,"text":"ArrayList. Como funciona o Resizable Array."},{"id":"arraylist-como-funciona-seu-redimensionamento-automático","depth":2,"text":"ArrayList: Como funciona seu redimensionamento automático."},{"id":"vantagens-e-desvantagens","depth":2,"text":"Vantagens e Desvantagens"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:list:array-list.md","_source":"content","_file":"articles/estrutura-de-dados-java/list/array-list.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/list","_dir":"estrutura-de-dados-java","_draft":false,"_partial":false,"_locale":"","title":"Listas","description":"Listas | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/lista.png","alt":"Lista.","width":512,"height":512},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"Listas"},{"name":"description","content":"Listas | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"Listas | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"Listas | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"Listas | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"Listas | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, List, Listas, ArrayList, LinkedList, Vector, Stack"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/lista.png"},{"name":"og:image:width","content":"512"},{"name":"og:image:height","content":"512"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"listas"},"children":[{"type":"text","value":"Listas."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"div","props":{"className":["img_pag_init"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Lista","position":"auto","src":"/static/images/articles/estrutura-de-dados-java/lista.png","width":"30%"},"children":[]}]}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h3","props":{"id":"sobre-listas"},"children":[{"type":"text","value":"Sobre Listas"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Comumente, recorremos à "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"List"}]},{"type":"text","value":" quando buscamos uma coleção ordenada, permitindo a inclusão de elementos duplicados, e quando a busca por índices é uma operação desejada."}]},{"type":"element","tag":"next-content","props":{"content":"Começando com ArrayList","linkcontent":"/articles/estrutura-de-dados-java/list/array-list"},"children":[]},{"type":"element","tag":"div","props":{"className":["clear-both"]},"children":[]},{"type":"element","tag":"h2","props":{"id":"estruturas"},"children":[{"type":"text","value":"Estruturas"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/list/array-list"},"children":[{"type":"text","value":"ArrayList"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/list/linked-list"},"children":[{"type":"text","value":"LinkedList"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/list/vector"},"children":[{"type":"text","value":"Vector"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/list/stack"},"children":[{"type":"text","value":"Stack"}]}]}]},{"type":"element","tag":"div","props":{"className":["clear-both"]},"children":[]},{"type":"element","tag":"div","props":{"style":"padding:1rem 0"},"children":[]},{"type":"element","tag":"next-content","props":{"content":"Começando com ArrayList","linkcontent":"/articles/estrutura-de-dados-java/list/array-list"},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"sobre-listas","depth":3,"text":"Sobre Listas"},{"id":"estruturas","depth":2,"text":"Estruturas"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:list:index.md","_source":"content","_file":"articles/estrutura-de-dados-java/list/index.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/list/linked-list","_dir":"list","_draft":false,"_partial":false,"_locale":"","title":"LinkedList","description":"ListLinkedList vs ArrayListas | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/linked-list-adicao-de-elementos.png","alt":"LinkedList Java.","width":3478,"height":1420},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"LinkedList"},{"name":"description","content":"LinkedList vs ArrayList | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"LinkedList vs ArrayList | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"LinkedList vs ArrayList | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"LinkedList vs ArrayList | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"LinkedList vs ArrayList | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, List, Listas, LinkedList, LinkedList vs ArrayList"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/linked-list-adicao-de-elementos.png"},{"name":"og:image:width","content":"3478"},{"name":"og:image:height","content":"1420"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"linkedlist"},"children":[{"type":"text","value":"LinkedList."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h2","props":{"id":"linkedlist-como-funciona-o-doubly-linked-list"},"children":[{"type":"text","value":"LinkedList. Como funciona o "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Doubly-linked List"}]},{"type":"text","value":"."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A estrutura de dados do LinkedList é sim uma "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Linked List"}]},{"type":"text","value":" (ou Lista Ligada), porém de forma mais rigorosa, ela é mais especificamente uma "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Doubly-linked List"}]},{"type":"text","value":" (ou Lista Duplamente Ligada)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Doubly-linked List"}]},{"type":"text","value":" funciona no Java, através de um objeto chamado "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Node"}]},{"type":"text","value":", podemos vê-lo "},{"type":"element","tag":"a","props":{"href":"https://github.com/openjdk/jdk/blob/ecd25e7d6f9d69f9dbdbff0a4a9b9d6b19288593/src/java.base/share/classes/java/util/LinkedList.java#L986","target":"blank","rel":["nofollow"]},"children":[{"type":"text","value":"aqui no código fonte do Java"}]},{"type":"text","value":":"}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"Node(Node<E> prev, E element, Node<E> next)\n  { ... }\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"Node"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Node"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"E"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" prev, "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"E"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" element, "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Node"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"E"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" next)\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"  { ... }"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"De forma rudimentar, o parametro "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"element"}]},{"type":"text","value":" é o value, ou seja, o objeto que está sendo armazenado. Já os paramentros "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"prev"}]},{"type":"text","value":" e "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"next"}]},{"type":"text","value":", funcionam como "},{"type":"element","tag":"abbr","props":{"title":"uma variável que armazena o endereço de memória de um objeto","style":"text-decoration: underline dotted"},"children":[{"type":"text","value":"ponteiros"}]},{"type":"text","value":", sendo respectivamente "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"prev"}]},{"type":"text","value":" (previous) quem aponta para o node anterior, e "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"next"}]},{"type":"text","value":" quem aponta para o próximo node que está a sua frente."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Isso significa que cada node possui seu element e ponteiros para seu próximo e anterior node."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"exemplo em código:"}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"final var __ = \" ; size: \";\nvar numbersLinkedList = new LinkedList<Integer>();\nnumbersLinkedList.addAll(Arrays.asList(\n  4,6,8,9\n));\n\nSystem.out.println(numbersLinkedList+__+numbersLinkedList.size());\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"final"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" __ "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\" ; size: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":";\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersLinkedList "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"LinkedList"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Integer"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersLinkedList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"addAll"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(Arrays."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"asList"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"4"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"6"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"8"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"9\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"));\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersLinkedList"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"__"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersLinkedList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"size"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[4, 6, 8, 9]"}]},{"type":"text","value":" ; size: 4"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"LinkedList Java","src":"/static/images/articles/estrutura-de-dados-java/linked-list.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vale ressaltar que, para adição, o LinkedList é muito rápido, pois não precisa se redimensionar, internamente ele não usa um array como ArrayList, ele armazena no baixo nivel os nodes em locais como a "},{"type":"element","tag":"a","props":{"href":"/no-seo/virtual-memory-4522-bd13-c7dc7eac996d","target":"blank"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Heap"}]}]},{"type":"text","value":", como a Heap é dinâmica, os nodes simplesmente são armazenados lá, e para encontrarmos é via ponteiro dos outros nodes."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"exemplo em código:"}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"final var __ = \" ; size: \";\nvar numbersLinkedList = new LinkedList<Integer>();\nnumbersLinkedList.addAll(Arrays.asList(\n  4,6,8,10\n));\n\nSystem.out.println(numbersLinkedList+__+numbersLinkedList.size());\n\nnumbersLinkedList.add(3, 9);\nSystem.out.println(numbersLinkedList+__+numbersLinkedList.size());\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"final"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" __ "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\" ; size: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":";\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersLinkedList "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"LinkedList"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Integer"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersLinkedList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"addAll"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(Arrays."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"asList"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"4"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"6"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"8"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"10\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"));\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersLinkedList"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"__"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersLinkedList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"size"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersLinkedList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"9"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersLinkedList"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"__"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersLinkedList."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"size"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[4, 6, 8, 10]"}]},{"type":"text","value":" ; size: 4 "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \n"},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[4, 6, 8, 9, 10]"}]},{"type":"text","value":" ; size: 5"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"imagem mental de adição no LinkedList Java","src":"/static/images/articles/estrutura-de-dados-java/linked-list-adicao-de-elementos.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Como pode ver, além do novo node, foi preciso apenas alterar dois ponteiros de outros nodes. Para se ter ideia, LinkedList é cerca de 9x mais rápido que ArrayList no quesito adição que não seja no final da estrutura de dados. Afinal de contas, em listas ligadas, seus itens podem estar em qualquer lugar da\nmemória."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Porém como nada é bala de prata, LinkedList é pessimo no quesito para fazer busca na estrutura de dados, pois para fazer search ele precisa fazer "},{"type":"element","tag":"a","props":{"href":"https://github.com/openjdk/jdk/blob/ecd25e7d6f9d69f9dbdbff0a4a9b9d6b19288593/src/java.base/share/classes/java/util/LinkedList.java#L615","target":"blank","rel":["nofollow"]},"children":[{"type":"text","value":"equals em for em todos os nodes"}]},{"type":"text","value":", mesmo que o "},{"type":"element","tag":"a","props":{"href":"https://github.com/openjdk/jdk/blob/ecd25e7d6f9d69f9dbdbff0a4a9b9d6b19288593/src/java.base/share/classes/java/util/ArrayList.java#L299","target":"blank","rel":["nofollow"]},"children":[{"type":"text","value":"ArrayList faça o mesmo"}]},{"type":"text","value":", ainda assim o LinkedList é cerca de "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"130x pior"}]},{"type":"text","value":" que o ArrayList em search, pois diferentemento do ArrayList que é sequencial (o que facilita em fazer search), o LinkedList vai precisar verificar Node a Node, para isso ira em cada Node, ver se corresponde ao element procurado, caso contrario vai precisar verificar o ponteiro do próximo Node, ir no endereço da memória, e repetir o processo. Quanto maior for a LinkedList, pior vai ser para fazer search."}]},{"type":"element","tag":"h2","props":{"id":"vantagens-e-desvantagens"},"children":[{"type":"text","value":"Vantagens e Desvantagens"}]},{"type":"element","tag":"h5","props":{"id":"vantagens"},"children":[{"type":"text","value":"Vantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Eficiente para inserções e remoções frequentes, inclusive em posições aleatórias, pois não requer realocação de memória."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Suporta eficientemente operações de remoção e inserção no meio da lista."}]}]},{"type":"element","tag":"h5","props":{"id":"desvantagens"},"children":[{"type":"text","value":"Desvantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" O acesso direto aos elementos é mais lento do que em ArrayList devido à necessidade de percorrer os Nodes sequencialmente, ou melhor, não existe operação de busca por índice."}]}]},{"type":"element","tag":"h4","props":{"id":"uso-comum"},"children":[{"type":"text","value":"Uso comum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Implementação de listas encadeadas para operações eficientes de inserção e remoção."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Cenário de uso:"}]},{"type":"text","value":" Em um editor de texto colaborativo em tempo real, uma LinkedList pode ser usada para representar a sequência de caracteres, permitindo inserções e remoções eficientes em qualquer posição do texto."}]},{"type":"element","tag":"next-content","props":{"content":"Vector","linkcontent":"/articles/estrutura-de-dados-java/list/vector"},"children":[]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":".monokai{color:#F8F8F2;background:#272822;}.ct-253592{color:#A6E22E;}.ct-183901{color:#F8F8F2;}.ct-049000{color:#66D9EF;font-style:italic;}.ct-268635{color:#F92672;}.ct-141567{color:#E6DB74;}.ct-674544{color:#AE81FF;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"linkedlist-como-funciona-o-doubly-linked-list","depth":2,"text":"LinkedList. Como funciona o Doubly-linked List."},{"id":"vantagens-e-desvantagens","depth":2,"text":"Vantagens e Desvantagens"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:list:linked-list.md","_source":"content","_file":"articles/estrutura-de-dados-java/list/linked-list.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/list/stack","_dir":"list","_draft":false,"_partial":false,"_locale":"","title":"Stack","description":"Stack Java | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/stack.png","alt":"Stack Java.","width":3386,"height":2306},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"Stack"},{"name":"description","content":"Stack Java | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"Stack Java | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"Stack Java | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"Stack Java | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"Stack Java | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, List, Listas, Stack, Stack Java"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/stack.png"},{"name":"og:image:width","content":"3386"},{"name":"og:image:height","content":"2306"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"stack"},"children":[{"type":"text","value":"Stack."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h2","props":{"id":"pilha-como-funciona-a-stack"},"children":[{"type":"text","value":"Pilha. Como funciona a "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Stack"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A Stack, como o próprio nome sugere, é uma pilha. Essa estrutura clássica segue o princípio LIFO (Last-In-First-Out), onde o último elemento a entrar é o primeiro a sair."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Imaginem como uma pilha de pratos. Quando você adiciona um novo prato, ele se torna o topo da pilha. Se precisar remover um prato, você retira o que está no topo, pois foi o último a ser adicionado."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"É a mesma forma que a Stack opera. É uma escolha lógica quando a ordem de entrada e saída é crucial. Se você está lidando com dados onde a temporalidade importa, a Stack é a ferramenta certa."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"exemplo em código:"}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"var numbersStack = new Stack<Integer>();\nnumbersStack.push(2);\nnumbersStack.push(3);\nnumbersStack.push(5);\n\nSystem.out.println(\"Top of the stack: \" + numbersStack.peek());\n\nSystem.out.println(\"Removing the element: \" + numbersStack.pop());\n\nSystem.out.println(\"Top of the stack: \" + numbersStack.peek());\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersStack "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Stack"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Integer"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersStack."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"push"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersStack."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"push"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersStack."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"push"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Top of the stack: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersStack."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"peek"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Removing the element: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersStack."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"pop"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Top of the stack: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersStack."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"peek"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Top of the stack: 5 "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \nRemoving the element: 5 "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \nTop of the stack: 3"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Stack Java","position":"auto","quality":"70","src":"/static/images/articles/estrutura-de-dados-java/stack.png","width":"65%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"No entanto, saiba que na atualidade é recomendado mais o uso de Class que derivem diretamente de Deque para quando precisar de um Stack. Isso porque tem as mesmas funcionalidades, são mais flexíveis e mais performáticas."}]},{"type":"element","tag":"h2","props":{"id":"vantagens-e-desvantagens"},"children":[{"type":"text","value":"Vantagens e Desvantagens"}]},{"type":"element","tag":"h5","props":{"id":"vantagens"},"children":[{"type":"text","value":"Vantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Implementa uma estrutura de pilha de forma simples e eficiente. LIFO - Last In, First Out."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Operações de empilhamento e desempilhamento são rápidas."}]}]},{"type":"element","tag":"h5","props":{"id":"desvantagens"},"children":[{"type":"text","value":"Desvantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Limitado na flexibilidade em comparação com outras estruturas mais gerais, como ArrayList ou LinkedList."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Eistem estruturas que fazem o mesmo trabalho e de forma mais rápida, como o "},{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/queue/array-deque","target":"blank"},"children":[{"type":"text","value":"ArrayDeque"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h4","props":{"id":"uso-comum"},"children":[{"type":"text","value":"Uso comum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Rastreamento de chamadas de função em algoritmos recursivos ou controle de navegação em um navegador web."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Cenário de uso:"}]},{"type":"text","value":" Um navegador web utiliza uma pilha para armazenar a história de navegação do usuário, permitindo a navegação de volta (undo) e para frente (redo) nas páginas visitadas."}]},{"type":"element","tag":"next-content","props":{"content":"Queue (próxima interface)","linkcontent":"/articles/estrutura-de-dados-java/queue"},"children":[]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":".monokai{color:#F8F8F2;background:#272822;}.ct-049000{color:#66D9EF;font-style:italic;}.ct-183901{color:#F8F8F2;}.ct-268635{color:#F92672;}.ct-253592{color:#A6E22E;}.ct-674544{color:#AE81FF;}.ct-141567{color:#E6DB74;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"pilha-como-funciona-a-stack","depth":2,"text":"Pilha. Como funciona a Stack."},{"id":"vantagens-e-desvantagens","depth":2,"text":"Vantagens e Desvantagens"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:list:stack.md","_source":"content","_file":"articles/estrutura-de-dados-java/list/stack.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/list/vector","_dir":"list","_draft":false,"_partial":false,"_locale":"","title":"Vector","description":"Vector vs ArrayList | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/vector-x-array-list.png","alt":"Vector x ArrayList Java.","width":3114,"height":2547},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"Vector"},{"name":"description","content":"Vector vs ArrayList | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"Vector vs ArrayList | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":" | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"Vector vs ArrayList | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"Vector vs ArrayList | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, List, Listas, Vector, Vector vs ArrayList"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/vector-x-array-list.png"},{"name":"og:image:width","content":"3114"},{"name":"og:image:height","content":"2547"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"vector"},"children":[{"type":"text","value":"Vector."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h2","props":{"id":"vector-mais-que-um-simples-arraylist-sincronizado"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Vector"}]},{"type":"text","value":". Mais que um Simples ArrayList Sincronizado."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O Vector é a resposta quando a segurança em ambientes multi-thread é crucial. Entretanto, essa segurança tem seu preço, o Vector não é tão ágil quanto o ArrayList. Enquanto este último geralmente mantém 50% de espaço pré-alocado, o Vector vai além, aumentando 100% por tamanho pré-alocado. Em termos simples, a memória do Vector tem o dobro da capacidade em relação ao seu tamanho real."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mas por que optar pelo Vector em vez do ArrayList? A resposta está na sua sincronização embutida, tornando-o seguro para uso em ambientes com várias threads. Embora essa segurança afete o desempenho, o Vector se destaca quando a consistência dos dados é primordial."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"ArrayList x Vector Java","position":"auto","quality":"50","src":"/static/images/articles/estrutura-de-dados-java/vector-x-array-list.png","width":"65%"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"vantagens-e-desvantagens"},"children":[{"type":"text","value":"Vantagens e Desvantagens"}]},{"type":"element","tag":"h5","props":{"id":"vantagens"},"children":[{"type":"text","value":"Vantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Similar ao ArrayList, mas é sincronizado, sendo útil em ambientes multithread."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Acesso direto aos elementos através de índices."}]}]},{"type":"element","tag":"h5","props":{"id":"desvantagens"},"children":[{"type":"text","value":"Desvantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" A sincronização pode levar a um desempenho inferior em comparação com estruturas não sincronizadas, se não houver necessidade de concorrência."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" O redimensionamento automático pode ser custoso."}]}]},{"type":"element","tag":"h4","props":{"id":"uso-comum"},"children":[{"type":"text","value":"Uso comum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Semelhante ao ArrayList, mas com sincronização para ambientes multithread."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Cenário de uso:"}]},{"type":"text","value":" Em um sistema de reservas de passagens online, um Vector pode ser utilizado para armazenar a lista de assentos disponíveis, garantindo consistência em operações concorrentes."}]},{"type":"element","tag":"next-content","props":{"content":"Stack","linkcontent":"/articles/estrutura-de-dados-java/list/stack"},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"vector-mais-que-um-simples-arraylist-sincronizado","depth":2,"text":"Vector. Mais que um Simples ArrayList Sincronizado."},{"id":"vantagens-e-desvantagens","depth":2,"text":"Vantagens e Desvantagens"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:list:vector.md","_source":"content","_file":"articles/estrutura-de-dados-java/list/vector.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/map/hash-map","_dir":"map","_draft":false,"_partial":false,"_locale":"","title":"HashMap","description":"HashMap | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/hash-map-colisao.png","alt":"HashMap colisão Java.","width":5265,"height":4670},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"HashMap"},{"name":"description","content":"HashMap | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"HashMap | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"HashMap | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"HashMap | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"HashMap | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, Map, HashMap"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/hash-map-colisao.png"},{"name":"og:image:width","content":"5265"},{"name":"og:image:height","content":"4670"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"hashmap"},"children":[{"type":"text","value":"HashMap."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h2","props":{"id":"hashmap-como-funciona-o-hash-table"},"children":[{"type":"text","value":"HashMap. Como funciona o "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Hash Table"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O HashMap, também conhecido como "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Hash Table"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Hash Map"}]},{"type":"text","value":", ou até "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Dictionary"}]},{"type":"text","value":", é uma estrutura baseada em tabelas de hash."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Opcional: Não sabe o que é hash? "},{"type":"element","tag":"a","props":{"href":"/no-seo/hash-resumo-7bb19b9b-f343-4182-bdbb-718c21a64509"},"children":[{"type":"text","value":"Veja um pequeno resumo aqui"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Essas tabelas são essencialmente arrays dinâmicos de objetos "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Node"}]},{"type":"text","value":", que armazenam pares chave-valor."}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"/**\n * A tabela (array), inicializada no primeiro uso e redimensionada conforme necessário.\n */\ntransient Node<K,V>[] table;\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-971041"},"children":[{"type":"text","value":"/**\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-971041"},"children":[{"type":"text","value":" * A tabela (array), inicializada no primeiro uso e redimensionada conforme necessário.\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-971041"},"children":[{"type":"text","value":" */\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"transient"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Node"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"K"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":","}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"V"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">[] table;"}]}]}]}]},{"type":"element","tag":"h4","props":{"id":"o-papel-do-hash"},"children":[{"type":"text","value":"O papel do Hash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A singularidade das chaves é crucial no HashMap. A key é única, garantindo que nenhum objeto tenha o mesmo identificador. Esse identificador, ou hash, é gerado automaticamente a partir da key. Surpreendentemente, o "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" do Java, responsável por gerar esses hashes, não é tão eficiente para garantir unicidade."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então, por que gerar hash da key? A resposta reside na eficiência da busca. Utilizando hash para localizar objetos é significativamente mais rápido do que comparações diretas, especialmente quando a key é uma string ou um objeto complexo. O "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" gera números, o que acelera ainda mais a busca."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Opcional: "},{"type":"element","tag":"a","props":{"href":"/no-seo/hashcode-java-9f3be809-394c-4bee-8e67-21a2ca50e52f"},"children":[{"type":"text","value":"Sobre o hashCode() de Java"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h4","props":{"id":"estrutura-interna-da-tabela-de-hash"},"children":[{"type":"text","value":"Estrutura Interna da Tabela de Hash"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A tabela de hash é um array dinâmico de objetos Node, cada um contendo informações cruciais:"}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"Node(int hash, K key, V value, Node<K,V> next) {\n  this.hash = hash;\n  this.key = key;\n  this.value = value;\n  this.next = next;\n}\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"Node"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"int"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" hash, "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"K"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" key, "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"V"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" value, "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Node"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"K,V"}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" next) {\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-678588"},"children":[{"type":"text","value":"this"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":".hash "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" hash;\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-678588"},"children":[{"type":"text","value":"this"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":".key "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" key;\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-678588"},"children":[{"type":"text","value":"this"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":".value "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" value;\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-678588"},"children":[{"type":"text","value":"this"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":".next "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" next;\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Além de armazenar key e value, cada Node guarda o hash gerado a partir da key. O atributo next é essencial para lidar com colisões de hash (veremos mais a frente), um conceito vital para a integridade da estrutura."}]},{"type":"element","tag":"h4","props":{"id":"exemplo-prático"},"children":[{"type":"text","value":"Exemplo Prático:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Considere o seguinte exemplo:"}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"var names = new HashMap<Integer, String>();\nnames.put(1, \"John Doe\");\nnames.put(2, \"Jane Doe\");\nnames.put(3, \"Aulus\");\n\nSystem.out.println(names);\n\nnames.put(3, \"Agerius\");\n\nSystem.out.println(names.get(3));\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" names "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"HashMap"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Integer"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"1"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"John Doe\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Jane Doe\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Aulus\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(names);\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Agerius\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"get"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"));"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"{1=John Doe, 2=Jane Doe, 3=Aulus}"}]},{"type":"text","value":" "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \nAgerius"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"HashMap Java","position":"auto","src":"/static/images/articles/estrutura-de-dados-java/hash-map.png","width":"90%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Note a key três tendo o value substituido, isto claro pois não pode haver 2 keys mapeando para o mesmo value."}]},{"type":"element","tag":"h2","props":{"id":"colisões-de-hash-no-hashmap"},"children":[{"type":"text","value":"Colisões de hash no HashMap."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao explorarmos as nuances do HashMap, deparamo-nos com um desafio intrigante: as colisões de hash. Conforme sabemos, uma função hash pode, eventualmente, produzir o mesmo valor hash para entradas distintas. Essa probabilidade é ainda maior quando se trata da função hashCode(). Agora, como enfrentamos essa questão em nossa estrutura HashMap? Como realizamos buscas por elementos usando a chave quando dois ou mais elementos compartilham o mesmo hash? E, se uma colisão resultar em dados sendo sobrepostos?"}]},{"type":"element","tag":"h4","props":{"id":"lidando-com-colisões-de-hash"},"children":[{"type":"text","value":"Lidando com Colisões de hash."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A justificativa para representar a tabela como um array de Nodes torna-se evidente quando ocorrem colisões. Nesse momento, a estrutura identifica duas chaves diferentes que geram o mesmo hash. A solução é conectar Nodes com o mesmo hash, assemelhando-se à lógica de uma "},{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/list/linked-list","target":"_blank"},"children":[{"type":"text","value":"LinkedList"}]},{"type":"text","value":". Contudo, aqui, é uma lista ligada simples, não duplamente ligada."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Quando ocorre uma colisão, o atributo "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"next"}]},{"type":"text","value":" do Node aponta para outro Node com uma chave diferente, mas com o mesmo hash. Durante uma pesquisa usando a chave, a estrutura gera o hash correspondente e inicia na posição "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"head"}]},{"type":"text","value":" (primeiro Node na sequência ligada). Se a chave não corresponder à do Node atual, a estrutura passa para o próximo Node usando o atributo "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"next"}]},{"type":"text","value":"."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nota: Essa sequência de Nodes ligados é englobada por algo que chamamos de "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Buckets"}]},{"type":"text","value":", uma representação visual que facilita a compreensão, embora não exista no código fonte."}]}]},{"type":"element","tag":"h4","props":{"id":"exemplo-prático-1"},"children":[{"type":"text","value":"Exemplo Prático:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para tornar isso mais tangível, consideremos as chaves como nomes de pessoas em String e os valores como CPF. Vamos usar duas chaves "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"\"FB\""}]},{"type":"text","value":" e "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"\"Ea\""}]},{"type":"text","value":", gerem o mesmo hash pela função "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":"."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"código:"}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"System.out.println(\"Hash FB: \" + \"FB\".hashCode());\nSystem.out.println(\"Hash Ea: \" + \"Ea\".hashCode());\n\nvar persons = new HashMap<String, String>();\n\npersons.put(\"gulybyte\", \"892.122.468-85\");\npersons.put(\"Aulus\", \"074.698.458-87\");\npersons.put(\"FB\", \"112.423.435-71\");\npersons.put(\"Donald Knuth\", \"822.923.975-44\");\npersons.put(\"Ea\", \"440.932.950-26\");\n\nSystem.out.println(persons.get(\"FB\"));\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Hash FB: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"FB\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"hashCode"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Hash Ea: \""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"+"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Ea\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"hashCode"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"());\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" persons "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"HashMap"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"persons."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"gulybyte\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"892.122.468-85\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"persons."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Aulus\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"074.698.458-87\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"persons."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"FB\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"112.423.435-71\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"persons."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Donald Knuth\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"822.923.975-44\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"persons."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"put"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Ea\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"440.932.950-26\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(persons."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"get"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"FB\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"));"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hash FB: 2236 "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \nHash Ea: 2236 "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \n112.423.435-71"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"HashMap Colisão Java","position":"auto","src":"/static/images/articles/estrutura-de-dados-java/hash-map-colisao.png","width":"80%"},"children":[]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Uma estrutura que contém outra estrutura de dados. Fascinante, não é mesmo?"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Para realizar pesquisas sem retornar múltiplos elementos, a estrutura verifica dentro do bucket para encontrar a chave correspondente, em vez de se basear apenas no hash gerado."}]},{"type":"element","tag":"details","props":{},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"h5","props":{"style":"display: inline;cursor:pointer;color:#7ba3ff","id":"opcional-casos-de-colisões-extremas"},"children":[{"type":"text","value":"Opcional: Casos de Colisões Extremas"}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"No contexto de BigData, surge a pergunta: e se houver muitas colisões? A busca em uma lista ligada pode se tornar um problema (assim como visto em "},{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/list/linked-list","target":"_blank"},"children":[{"type":"text","value":"LinkedList"}]},{"type":"text","value":"). Para esses casos, o HashMap emprega uma estratégia adicional: em vez de usar Nodes ligados, recorre a uma estrutura chamada "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Tree"}]},{"type":"text","value":" (ou árvore). Quando um bucket contém mais de 8 Nodes (não é uma regra), os dados são transferidos para uma Tree. Embora essa mudança gere uma pesquisa mais eficiente em casos de muitas colisões, ela dobra a complexidade espacial em comparação com a abordagem de Nodes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mas por que não usar Trees desde o início? Além de ser uma solução raramente necessária, as Trees ocupam o dobro do espaço em memória de um bucket com Nodes. Assim, a estratégia de transferir dados para uma Tree é acionada apenas em casos excepcionais, garantindo uma implementação eficiente na maioria das situações."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Como funciona essa Tree? Essa Tree usada como segunda estrategia para lidar com colisões, é quase a mesma que "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"TreeMap"}]},{"type":"text","value":", que será uma estrutura que veremos em breve. Não se preocupe quanto ao funcionamento minucioso desta 2º estrategia, ficara de fácil compreensão depois de vermos de a estrutura TreeMap."}]}]},{"type":"element","tag":"hr","props":{"id":"_1"},"children":[]},{"type":"element","tag":"h4","props":{"id":"quanta-complicação-_"},"children":[{"type":"text","value":"Quanta Complicação -_-"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então, por que toda essa complexidade? Não seria mais simples evitar o hash e realizar pesquisas diretas pela chave? Apesar das complicações, o hash oferece rapidez na pesquisa, tornando o processo altamente eficiente. Se a velocidade de pesquisa não é uma prioridade, talvez essa estrutura não seja a mais adequada."}]},{"type":"element","tag":"h2","props":{"id":"vantagens-e-desvantagens"},"children":[{"type":"text","value":"Vantagens e Desvantagens"}]},{"type":"element","tag":"h5","props":{"id":"vantagens"},"children":[{"type":"text","value":"Vantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Fornece acesso rápido aos elementos por meio de chaves."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Implementa um algoritmo de tabela de hashing eficiente. Ótimo para mapeamento de chaves para valores em grandes conjuntos de dados."}]}]},{"type":"element","tag":"h5","props":{"id":"desvantagens"},"children":[{"type":"text","value":"Desvantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Não garante a ordem dos elementos e pode levar a colisões, o que pode afetar o desempenho em casos específicos."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Sua função de hash não evita muitas colisões frequentes."}]}]},{"type":"element","tag":"h4","props":{"id":"uso-comum"},"children":[{"type":"text","value":"Uso comum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mapeamento eficiente de chaves para valores, útil em indexação e pesquisa."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Cenário de uso:"}]},{"type":"text","value":" Em um sistema de gerenciamento de cache, um HashMap pode ser utilizado para armazenar resultados de consultas recentes, permitindo a rápida recuperação dos resultados sem a necessidade de recálculos."}]},{"type":"element","tag":"next-content","props":{"content":"Próxima interface. (Set)","linkcontent":"/articles/estrutura-de-dados-java/set"},"children":[]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":".monokai{color:#F8F8F2;background:#272822;}.ct-971041{color:#88846F;}.ct-268635{color:#F92672;}.ct-183901{color:#F8F8F2;}.ct-049000{color:#66D9EF;font-style:italic;}.ct-253592{color:#A6E22E;}.ct-678588{color:#FD971F;}.ct-674544{color:#AE81FF;}.ct-141567{color:#E6DB74;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"hashmap-como-funciona-o-hash-table","depth":2,"text":"HashMap. Como funciona o Hash Table."},{"id":"colisões-de-hash-no-hashmap","depth":2,"text":"Colisões de hash no HashMap."},{"id":"vantagens-e-desvantagens","depth":2,"text":"Vantagens e Desvantagens"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:map:hash-map.md","_source":"content","_file":"articles/estrutura-de-dados-java/map/hash-map.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/map","_dir":"estrutura-de-dados-java","_draft":false,"_partial":false,"_locale":"","title":"Map's","description":"Map | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/set.png","alt":"Map Java.","width":2201,"height":1816},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"Map's"},{"name":"description","content":"Map | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"Map | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"Map | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"Map | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"Map | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, Map, HashMap"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/set.png"},{"name":"og:image:width","content":"2201"},{"name":"og:image:height","content":"1816"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"mapas"},"children":[{"type":"text","value":"Mapas."}]},{"type":"element","tag":"div","props":{"className":["img_pag_init"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Map (parecido com função matemática com indexador)","position":"auto","src":"/static/images/articles/estrutura-de-dados-java/set.png","width":"30%"},"children":[]}]}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h3","props":{"id":"sobre-mapas"},"children":[{"type":"text","value":"Sobre Mapas"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Comumente, recorremos à "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Map"}]},{"type":"text","value":" uando desejamos uma coleção que estabelece uma relação entre chaves e valores, sendo que as chaves não podem estar duplicadas. Valores podem ser duplicados, mas chaves não."}]},{"type":"element","tag":"next-content","props":{"content":"Começando com HashMap","linkcontent":"/articles/estrutura-de-dados-java/map/hash-map"},"children":[]},{"type":"element","tag":"div","props":{"className":["clear-both"]},"children":[]},{"type":"element","tag":"h4","props":{"id":"nota"},"children":[{"type":"text","value":"Nota"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Não será necessário abordar "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Hashtable"}]},{"type":"text","value":", pois compreender HashMap é suficiente. Analogamente a Vector e ArrayList, assim é com Hashtable e HashMap. A distinção entre eles reside na sincronização, sendo Hashtable adequado para ambientes multi-thread, embora com um consumo um pouco mais elevado de memória."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao iniciar esta série, mencionei que abordaria os mapeamentos HashMap (já explorado), "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"LinkedHashMap"}]},{"type":"text","value":", e "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"TreeMap"}]},{"type":"text","value":". No entanto, compreender HashMap torna as explicações subsequentes \"redundantes\". LinkedHashMap assemelha-se a "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"LinkedHashSet"}]},{"type":"text","value":", e TreeMap é comparável a "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"TreeSet"}]},{"type":"text","value":". A diferenciação reside na abordagem de geração de hash para armazenar dados, um aspecto que exploraremos ao estudar a próxima estrutura: "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"HashSet"}]},{"type":"text","value":", posteriormente a esta, discutiremos LinkedHashSet e TreeSet."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao entender as variações na geração de hash em estruturas pertencentes às interfaces "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Set"}]},{"type":"text","value":" e "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Map"}]},{"type":"text","value":", você poderá facilmente aplicar esses conceitos ao converter essas estruturas entre as interfaces Set e Map. Portanto, não vejo a nescessidade em explicar LinkedHashMap e TreeMap se veremos LinkedHashSet e TreeSet."}]},{"type":"element","tag":"next-content","props":{"content":"Começando com HashMap","linkcontent":"/articles/estrutura-de-dados-java/map/hash-map"},"children":[]},{"type":"element","tag":"div","props":{"className":["clear-both"]},"children":[]},{"type":"element","tag":"h2","props":{"id":"estruturas"},"children":[{"type":"text","value":"Estruturas"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/map/hash-map/"},"children":[{"type":"text","value":"HashMap"}]}]}]},{"type":"element","tag":"next-content","props":{"content":"Começando com HashMap","linkcontent":"/articles/estrutura-de-dados-java/map/hash-map"},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"sobre-mapas","depth":3,"text":"Sobre Mapas"},{"id":"estruturas","depth":2,"text":"Estruturas"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:map:index.md","_source":"content","_file":"articles/estrutura-de-dados-java/map/index.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/queue/array-deque","_dir":"queue","_draft":false,"_partial":false,"_locale":"","title":"ArrayDeque","description":"ArrayDeque | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/array-deque.png","alt":"ArrayDeque Java.","width":3700,"height":1062},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"ArrayDeque"},{"name":"description","content":"ArrayDeque | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"ArrayDeque | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"ArrayDeque | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"ArrayDeque | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"ArrayDeque | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, Queue, ArrayDeque"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/array-deque.png"},{"name":"og:image:width","content":"3700"},{"name":"og:image:height","content":"1062"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"arraydeque"},"children":[{"type":"text","value":"ArrayDeque."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h2","props":{"id":"arraydeque-como-funciona-o-double-ended-queues"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"ArrayDeque"}]},{"type":"text","value":". Como funciona o "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Double-Ended Queues"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O ArrayDeque, usa uma variação de uma estrutura de dados chamada "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Deque"}]},{"type":"text","value":" (ou "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Double-Ended Queues"}]},{"type":"text","value":"), que é uma estrutura que combina características familiares com um toque único. Aqui, você pode realizar operações em ambas as extremidades, criando assim um híbrido entre as estruturas de dados Stack e PriorityQueue."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Imagine a versatilidade de uma queue padrão, como a PriorityQueue, mas com a distinção de executar operações em ambas as cabeças (extremidades), é assim o funcionamento de uma deque. O ArrayDeque redefine o jogo, permitindo que você adicione e remova elementos tanto no início quanto no final da deque, criando uma abordagem única para manipulação de dados em \"ambos os lados\"."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"exemplo em código:"}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"var numbersDeque = new ArrayDeque<Integer>();\n\nnumbersDeque.add(6);\nnumbersDeque.add(8);\nnumbersDeque.add(9);\n\nSystem.out.println(numbersDeque);\n\nnumbersDeque.addFirst(4);\nnumbersDeque.addLast(10);\n\nSystem.out.println(numbersDeque);\n\nnumbersDeque.removeFirst();\nnumbersDeque.removeLast();\n\nSystem.out.println(numbersDeque);\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersDeque "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"ArrayDeque"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Integer"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersDeque."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"6"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersDeque."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"8"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersDeque."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"9"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersDeque);\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersDeque."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"addFirst"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"4"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersDeque."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"addLast"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"10"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":12},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersDeque);\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":13},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":14},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersDeque."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"removeFirst"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":15},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersDeque."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"removeLast"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":16},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":17},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersDeque);"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[6, 8, 9]"}]},{"type":"text","value":" "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \n"},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[4, 6, 8, 9, 10]"}]},{"type":"text","value":" "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \n"},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[6, 8, 9]"}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"ArrayDeque Java","src":"/static/images/articles/estrutura-de-dados-java/array-deque.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"vantagens-e-desvantagens"},"children":[{"type":"text","value":"Vantagens e Desvantagens"}]},{"type":"element","tag":"h5","props":{"id":"vantagens"},"children":[{"type":"text","value":"Vantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Fornece operações eficientes de fila e pilha, sendo um híbrido das duas."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Acesso rápido ao início e ao final da deque."}]}]},{"type":"element","tag":"h5","props":{"id":"desvantagens"},"children":[{"type":"text","value":"Desvantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Não é tão flexível quanto LinkedList para inserções e remoções no meio da estrutura."}]}]},{"type":"element","tag":"h4","props":{"id":"uso-comum"},"children":[{"type":"text","value":"Uso comum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Implementação eficiente de fila e pilha, especialmente em algoritmos onde operações de inserção e remoção em ambas as extremidades são frequentes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Cenário de uso:"}]},{"type":"text","value":" Em um sistema de processamento de eventos em tempo real, um ArrayDeque pode ser usado para armazenar eventos recentes, permitindo rápida adição e remoção tanto no início quanto no final da lista."}]},{"type":"element","tag":"next-content","props":{"content":"Map (próxima interface)","linkcontent":"/articles/estrutura-de-dados-java/map"},"children":[]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":".monokai{color:#F8F8F2;background:#272822;}.ct-049000{color:#66D9EF;font-style:italic;}.ct-183901{color:#F8F8F2;}.ct-268635{color:#F92672;}.ct-253592{color:#A6E22E;}.ct-674544{color:#AE81FF;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"arraydeque-como-funciona-o-double-ended-queues","depth":2,"text":"ArrayDeque. Como funciona o Double-Ended Queues."},{"id":"vantagens-e-desvantagens","depth":2,"text":"Vantagens e Desvantagens"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:queue:array-deque.md","_source":"content","_file":"articles/estrutura-de-dados-java/queue/array-deque.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/queue","_dir":"estrutura-de-dados-java","_draft":false,"_partial":false,"_locale":"","title":"Queue's","description":"Queue | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/fila.png","alt":"Queue.","width":958,"height":468},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"Queue's"},{"name":"description","content":"Queue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"Queue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"Queue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"Queue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"Queue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, Queue, PriorityQueue, ArrayDeque"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/fila.png"},{"name":"og:image:width","content":"958"},{"name":"og:image:height","content":"468"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"filas"},"children":[{"type":"text","value":"Filas."}]},{"type":"element","tag":"div","props":{"className":["img_pag_init"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Fila","position":"auto","src":"/static/images/articles/estrutura-de-dados-java/fila.png","width":"30%"},"children":[]}]}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h3","props":{"id":"sobre-filas"},"children":[{"type":"text","value":"Sobre Filas"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Comumente, recorremos à "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Queue"}]},{"type":"text","value":" quando buscamos uma coleção que mantem uma lista de prioridades. Ele é projetada para guardar elementos antes do processamento."}]},{"type":"element","tag":"next-content","props":{"content":"Começando com PriorityQueue","linkcontent":"/articles/estrutura-de-dados-java/queue/priority-queue"},"children":[]},{"type":"element","tag":"div","props":{"className":["clear-both"]},"children":[]},{"type":"element","tag":"h2","props":{"id":"estruturas"},"children":[{"type":"text","value":"Estruturas"}]},{"type":"element","tag":"details","props":{"style":"padding-bottom: 1rem"},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"h5","props":{"style":"display: inline;cursor:pointer;","id":"opcional-curiosidade-intrigante-da-interface-deque-no-java-clique"},"children":[{"type":"text","value":"\n    Opcional: curiosidade intrigante da interface Deque no Java. (clique)\n  "}]}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Em nossa jornada pela "},{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java#collections-framework","target":"blank"},"children":[{"type":"text","value":"hierarquia elementar do Collections Framework"}]},{"type":"text","value":", deparamo-nos com uma fascinante curiosidade sobre a interface Deque, nosso conhecido ArrayDeque não é o único a adotar essa interface. O LinkedList, por sua vez, também a implementa."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O LinkedList não se limita a ser apenas uma lista; ele é uma estrutura multifuncional que abraça as interfaces List e Deque. Essa dualidade se deve à natureza abstrata da estrutura deque, que funciona como uma estrutura de dados que "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"aponta para objetos anteriores e posteriores"}]},{"type":"text","value":". No caso do LinkedList no Java, baseado em uma Doubly-linked List, a implementação das interfaces List e Deque se torna essencial para alinhar-se com esse conceito."}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/queue/priority-queue/"},"children":[{"type":"text","value":"PriorityQueue"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/queue/array-deque"},"children":[{"type":"text","value":"ArrayDeque"}]}]}]},{"type":"element","tag":"next-content","props":{"content":"Começando com PriorityQueue","linkcontent":"/articles/estrutura-de-dados-java/queue/priority-queue"},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"sobre-filas","depth":3,"text":"Sobre Filas"},{"id":"estruturas","depth":2,"text":"Estruturas"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:queue:index.md","_source":"content","_file":"articles/estrutura-de-dados-java/queue/index.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/queue/priority-queue","_dir":"queue","_draft":false,"_partial":false,"_locale":"","title":"PriorityQueue","description":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/priority-queue.png","alt":"PriorityQueue Java.","width":3140,"height":613},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"PriorityQueue"},{"name":"description","content":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"PriorityQueue | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, Queue, PriorityQueue"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/priority-queue.png"},{"name":"og:image:width","content":"3140"},{"name":"og:image:height","content":"613"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"priorityqueue"},"children":[{"type":"text","value":"PriorityQueue."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h2","props":{"id":"priorityqueue-como-funciona-queue"},"children":[{"type":"text","value":"PriorityQueue. Como funciona "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Queue"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Como visto na estrutura de dados "},{"type":"element","tag":"a","props":{"href":"articles/estrutura-de-dados-java/list/stack","target":"blank"},"children":[{"type":"text","value":"Stack"}]},{"type":"text","value":", a Stack opera com o princípio LIFO (Last-In-First-Out), onde o último elemento a entrar é o primeiro a sair. Agora, vamos direcionar nossa atenção para a intrigante PriorityQueue."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao contrário da Stack, a PriorityQueue segue o princípio FIFO (First-In-First-Out). Nesse contexto, o primeiro elemento a entrar é o último a sair, replicando o comportamento de uma fila comum. Essa reviravolta na lógica de ordenação é útil em situações em que a prioridade dos elementos é crucial. O que é útil em situações em que a prioridade dos elementos é crucial."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"exemplo em código:"}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"var numbersQueue = new PriorityQueue<Integer>();\nnumbersQueue.add(2);\nnumbersQueue.add(3);\nnumbersQueue.add(5);\n\nSystem.out.println(numbersQueue);\n\nnumbersQueue.poll();\n\nSystem.out.println(numbersQueue);\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" numbersQueue "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"PriorityQueue"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"Integer"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersQueue."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"2"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersQueue."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"3"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersQueue."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-674544"},"children":[{"type":"text","value":"5"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersQueue);\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"numbersQueue."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"poll"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(numbersQueue);"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[2, 3, 5]"}]},{"type":"text","value":" "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \n"},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[3, 5]"}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"PriorityQueue Java","src":"/static/images/articles/estrutura-de-dados-java/priority-queue.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"vantagens-e-desvantagens"},"children":[{"type":"text","value":"Vantagens e Desvantagens"}]},{"type":"element","tag":"h5","props":{"id":"vantagens"},"children":[{"type":"text","value":"Vantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Mantém os elementos em ordem natural ou com base em um comparador, permitindo acesso eficiente ao elemento de maior prioridade."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Implementa uma fila de prioridade eficiente. FIFO - First In, First Out."}]}]},{"type":"element","tag":"h5","props":{"id":"desvantagens"},"children":[{"type":"text","value":"Desvantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Não fornece acesso eficiente a elementos arbitrários; a remoção é restrita ao elemento de maior prioridade."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" A remoção e atualização de elementos específicos são menos eficientes que em outras estruturas, em termos de flexibilidade."}]}]},{"type":"element","tag":"h4","props":{"id":"uso-comum"},"children":[{"type":"text","value":"Uso comum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Implementação de filas de prioridade em algoritmos como Dijkstra ou algoritmos de roteamento."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Cenário de uso:"}]},{"type":"text","value":" Em um sistema de despacho de tarefas, uma PriorityQueue pode ser usada para priorizar e executar tarefas com base em sua urgência ou importância. Como o "},{"type":"element","tag":"a","props":{"href":"https://aws.amazon.com/pt/sqs/","target":"_blank","rel":["nofollow"]},"children":[{"type":"text","value":"SQS da AWS"}]},{"type":"text","value":", onde as requisições são processadas por ordem de chegada."}]},{"type":"element","tag":"next-content","props":{"content":"ArrayDeque","linkcontent":"/articles/estrutura-de-dados-java/queue/array-deque"},"children":[]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":".monokai{color:#F8F8F2;background:#272822;}.ct-049000{color:#66D9EF;font-style:italic;}.ct-183901{color:#F8F8F2;}.ct-268635{color:#F92672;}.ct-253592{color:#A6E22E;}.ct-674544{color:#AE81FF;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"priorityqueue-como-funciona-queue","depth":2,"text":"PriorityQueue. Como funciona Queue."},{"id":"vantagens-e-desvantagens","depth":2,"text":"Vantagens e Desvantagens"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:queue:priority-queue.md","_source":"content","_file":"articles/estrutura-de-dados-java/queue/priority-queue.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/set/hash-set","_dir":"set","_draft":false,"_partial":false,"_locale":"","title":"HashSet","description":"HashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/hash-set-colisao.png","alt":"HashSet Java.","width":2142,"height":1156},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"HashSet"},{"name":"description","content":"HashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"HashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"HashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"HashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"HashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, Set, HashSet"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/hash-set-colisao.png"},{"name":"og:image:width","content":"2142"},{"name":"og:image:height","content":"1156"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"hashset"},"children":[{"type":"text","value":"HashSet."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em 1em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h2","props":{"id":"hashset-como-funciona-o-hash-table-com-set"},"children":[{"type":"text","value":"HashSet. Como Funciona o "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Hash Table"}]},{"type":"text","value":" com "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Set"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O HashSet, assim como o HashMap, é uma estrutura de dados baseada em tabelas de hash. Embora ambos compartilhem a ideia de associação chave-valor "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"<K, V>"}]},{"type":"text","value":", no HashSet essa relação é um pouco diferente. Ao contrário do HashMap, não tratamos diretamente de chaves no HashSet. A chave é utilizada apenas para garantir a ausência de duplicatas de dados, utilizando o hash. Em resumo, o HashSet é semelhante ao HashMap, mas com foco na exclusividade dos dados, evitando duplicatas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O funcionamento é o seguinte: ao adicionar um elemento, o HashSet recebe esse elemento, e a função hash é aplicada a ele. Em outras palavras, o hash é gerado com base nos dados que estamos inserindo. Para recuperar um dado na estrutura, utilizamos o próprio dado enviado, que é transformado em hash para realizar a busca na estrutura."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Então, qual é a vantagem? Enquanto no HashMap podemos verificar a existência de algo sem possuir todos os dados, utilizando apenas a chave, no HashSet precisamos do dado completo. O Set é ideal para casos em que desejamos evitar duplicatas de dados e verificar a existência desses dados (retornando verdadeiro ou falso) durante a manipulação da estrutura."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"exemplo em código:"}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"var names = new HashSet<String>();\n\nnames.add(\"gulybyte\");\nnames.add(\"Aulus\");\nnames.add(\"Donald Knuth\");\n\nSystem.out.println(names.contains(\"gulybyte\"));\nSystem.out.println(names.contains(\"John Doe\"));\n\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" names "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"HashSet"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"gulybyte\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Aulus\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Donald Knuth\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"contains"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"gulybyte\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"));\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"contains"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"John Doe\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"));"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"true "},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":" \nfalse"}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"HashSet Java","position":"auto","src":"/static/images/articles/estrutura-de-dados-java/hash-set.png","width":"80%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Observe que as informações não serão dispostas de forma organizada, nem mesmo por inserção."}]},{"type":"element","tag":"h2","props":{"id":"e-se-houver-colisões"},"children":[{"type":"text","value":"E se houver colisões?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Aqui a resposta é simples: nos bastidores, o HashSet usa o HashMap. Em outras palavras, ele abstrai para nós a necessidade de lidar diretamente com chaves."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Dado que o HashSet implementa o HashMap, a abordagem para lidar com colisões é a mesma. Vamos usar o mesmo exemplo que utilizamos no HashMap."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"exemplo em código:"}]}]}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"var names = new HashSet<String>();\n\nnames.add(\"John Carmack\");\nnames.add(\"Ea\");\nnames.add(\"Cormen\");\nnames.add(\"FB\");\n\nSystem.out.println(names);\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" names "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"HashSet"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"John Carmack\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Ea\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Cormen\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"FB\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(names);"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[Cormen, John Carmack, Ea, FB]"}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"HashSet Colisão Java","position":"auto","src":"/static/images/articles/estrutura-de-dados-java/hash-set-colisao.png","width":"80%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nesta representação visual, optei por retratar o HashSet de forma mais abstrata, diferentemente de incluir os Nodes como fizemos no HashMap, para variar um pouco e facilitar o entendimento."}]},{"type":"element","tag":"h2","props":{"id":"vantagens-e-desvantagens"},"children":[{"type":"text","value":"Vantagens e Desvantagens"}]},{"type":"element","tag":"h5","props":{"id":"vantagens"},"children":[{"type":"text","value":"Vantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Fornece uma coleção de elementos únicos com acesso rápido."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Implementa um algoritmo de tabela de hashing eficiente, sem duplicação de dados. Eficiente para verificar a existência de elementos."}]}]},{"type":"element","tag":"h5","props":{"id":"desvantagens"},"children":[{"type":"text","value":"Desvantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Não mantém a ordem dos elementos e pode ter colisões."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Sua função de hash hashCode pode levar a colisões frequentes."}]}]},{"type":"element","tag":"h4","props":{"id":"uso-comum"},"children":[{"type":"text","value":"Uso comum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Verificação eficiente de unicidade de elementos em uma coleção."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Cenário de uso:"}]},{"type":"text","value":" Em um sistema de gerenciamento de permissões, um HashSet pode ser usado para armazenar os papéis atribuídos a um usuário, garantindo que não haja duplicatas e facilitando a verificação de permissões."}]},{"type":"element","tag":"next-content","props":{"content":"LinkedHashSet","linkcontent":"/articles/estrutura-de-dados-java/set/linked-hash-set"},"children":[]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":".monokai{color:#F8F8F2;background:#272822;}.ct-049000{color:#66D9EF;font-style:italic;}.ct-183901{color:#F8F8F2;}.ct-268635{color:#F92672;}.ct-253592{color:#A6E22E;}.ct-141567{color:#E6DB74;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"hashset-como-funciona-o-hash-table-com-set","depth":2,"text":"HashSet. Como Funciona o Hash Table com Set."},{"id":"e-se-houver-colisões","depth":2,"text":"E se houver colisões?"},{"id":"vantagens-e-desvantagens","depth":2,"text":"Vantagens e Desvantagens"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:set:hash-set.md","_source":"content","_file":"articles/estrutura-de-dados-java/set/hash-set.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/set","_dir":"estrutura-de-dados-java","_draft":false,"_partial":false,"_locale":"","title":"Set's","description":"Set | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/set.png","alt":"Set Java.","width":2201,"height":1816},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"Set's"},{"name":"description","content":"Set | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"Set | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"Set | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"Set | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"Set | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, Set, HashSet, LinkedHashSet, TreeSet"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/set.png"},{"name":"og:image:width","content":"2201"},{"name":"og:image:height","content":"1816"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"sets"},"children":[{"type":"text","value":"Set's."}]},{"type":"element","tag":"div","props":{"className":["img_pag_init"]},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Map","position":"auto","src":"/static/images/articles/estrutura-de-dados-java/set.png","width":"30%"},"children":[]}]}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"details","props":{"style":"padding-top:1.5rem;"},"children":[{"type":"element","tag":"summary","props":{},"children":[{"type":"text","value":"\n  "},{"type":"element","tag":"h5","props":{"style":"display: inline;cursor:pointer;","id":"opcional-breve-explicação-da-imagem-conceitual-acima-clique"},"children":[{"type":"text","value":"\n    Opcional: breve explicação da imagem conceitual acima. (clique)\n  "}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"HashSet Java","position":"auto","src":"/static/images/articles/estrutura-de-dados-java/set.png","width":"30%","quality":"30"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Isto diz, como funciona em geral uma função hash, onde cada valor será transformando em um unico hash, isso significa que os mesmo valores resultam nos mesmo hashes. (A expressão mostrada, é uma expressão matemática da lógica proposicional)."}]},{"type":"element","tag":"equation","props":{"expression":"\\{ \\forall v \\exists! h \\} \\Leftrightarrow \\begin{Bmatrix}  \\begin{matrix} \\underbrace{ \\forall v } \\\\ \\text{para todo value } \\end{matrix}\\text{ }\\begin{matrix} \\underbrace{ \\exists! h } \\\\ \\text{ existe um, e apenas um hash} \\end{matrix} \\end{Bmatrix}","size":"2re"},"children":[]}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h3","props":{"id":"sobre-sets"},"children":[{"type":"text","value":"Sobre Sets"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Comumente, recorremos à "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Set"}]},{"type":"text","value":" quando buscamos uma coleção que não permite elementos duplicados. Set segue o modelo matemático "},{"type":"element","tag":"a","props":{"href":"https://en.wikipedia.org/wiki/Set_(abstract_data_type)","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"Set Abstraction"}]},{"type":"text","value":"."}]},{"type":"element","tag":"next-content","props":{"content":"Começando com HashSet","linkcontent":"/articles/estrutura-de-dados-java/set/hash-set"},"children":[]},{"type":"element","tag":"div","props":{"className":["clear-both"]},"children":[]},{"type":"element","tag":"h2","props":{"id":"estruturas"},"children":[{"type":"text","value":"Estruturas"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/set/hash-set/"},"children":[{"type":"text","value":"HashSet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/set/linked-hash-set/"},"children":[{"type":"text","value":"LinkedHashSet"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"/articles/estrutura-de-dados-java/set/tree-set/"},"children":[{"type":"text","value":"TreeSet"}]}]}]},{"type":"element","tag":"div","props":{"className":["clear-both"]},"children":[]},{"type":"element","tag":"div","props":{"style":"padding:1rem 0"},"children":[]},{"type":"element","tag":"next-content","props":{"content":"Começando com HashSet","linkcontent":"/articles/estrutura-de-dados-java/set/hash-set"},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"sobre-sets","depth":3,"text":"Sobre Sets"},{"id":"estruturas","depth":2,"text":"Estruturas"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:set:index.md","_source":"content","_file":"articles/estrutura-de-dados-java/set/index.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/set/linked-hash-set","_dir":"set","_draft":false,"_partial":false,"_locale":"","title":"LinkedHashSet","description":"LinkedHashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/linked-hash-set-colisao.png","alt":"LinkedHashSet Java.","width":2889,"height":2415},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"LinkedHashSet"},{"name":"description","content":"LinkedHashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"LinkedHashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"LinkedHashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"LinkedHashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"LinkedHashSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, Set, LinkedHashSet"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/linked-hash-set-colisao.png"},{"name":"og:image:width","content":"2889"},{"name":"og:image:height","content":"2415"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"linkedhashset"},"children":[{"type":"text","value":"LinkedHashSet."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h2","props":{"id":"linkedhashset-como-funciona-o-hash-table-com-set-e-uma-linked-list-vinculada"},"children":[{"type":"text","value":"LinkedHashSet. Como funciona o "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Hash Table"}]},{"type":"text","value":" com "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Set"}]},{"type":"text","value":" e uma "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Linked List"}]},{"type":"text","value":" vinculada."}]},{"type":"element","tag":"h5","props":{"id":"inicialmente-uma-ressalva"},"children":[{"type":"text","value":"Inicialmente, uma ressalva."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Aqui, evitarei entrar em minúcias sobre o LinkedHashSet, uma vez que, no próprio código-fonte Java, "},{"type":"element","tag":"a","props":{"href":"https://github.com/openjdk/jdk/blob/ecd25e7d6f9d69f9dbdbff0a4a9b9d6b19288593/src/java.base/share/classes/java/util/LinkedHashMap.java#L187","rel":["nofollow"]},"children":[{"type":"text","value":"é explicitamente indicado que o LinkedHashMap é, de certa maneira, confuso quanto ao seu funcionamento"}]},{"type":"text","value":".  Se até os engenheiros do Java consideram isso, quem sou eu para discordar? Além disso, como o LinkedHashSet se baseia no LinkedHashMap, a explanação fica um tanto desafiadora. Portanto irei simplificar, mantendo as informações essenciais para uma compreensão clara."}]},{"type":"element","tag":"h5","props":{"id":"a-estrutura"},"children":[{"type":"text","value":"A Estrutura"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O LinkedHashSet representa uma estrutura de dados fascinante, assemelhando-se ao HashSet na prevenção de duplicatas, mas com uma distinção crucial: aqui, a ordem de inserção é preservada, ao contrário do HashSet convencional. Mas como essa façanha é alcançada? O LinkedHashSet utiliza tanto a tabela de hash quanto uma lista encadeada, sendo esta última responsável por manter a ordem de inserção. Em relação aos atributos, a essência reside nos seguintes pontos:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"chave (key):"}]},{"type":"text","value":" similar ao HashSet, é gerada a partir do valor;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"valor (value):"}]},{"type":"text","value":" nossa informação central;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"próximo (next):"}]},{"type":"text","value":" gerenciamento de colisões de hash;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"depois (after):"}]},{"type":"text","value":" atributo crucial para a manutenção da ordem, apontando para o elemento subsequente;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"antes (before):"}]},{"type":"text","value":" outro atributo crucial para a ordem, apontando para o elemento anterior."}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Nota: O desempenho do LinkedHashSet é ligeiramente inferior ao do HashSet, devido ao custo adicional associado à manutenção da lista encadeada."}]}]},{"type":"element","tag":"h4","props":{"id":"exemplificando"},"children":[{"type":"text","value":"Exemplificando"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vamos agora examinar o mesmo exemplo utilizado no HashSet, porém com a distinção de que nossos dados agora se apresentam ordenados. Vale notar que, dada a maturidade esperada dos leitores, apresentarei o exemplo já contemplando colisões de hash:"}]},{"type":"element","tag":"pre","props":{"className":"language-java monokai","code":"var names = new LinkedHashSet<String>();\n\nnames.add(\"John Carmack\");\nnames.add(\"Ea\");\nnames.add(\"Cormen\");\nnames.add(\"FB\");\n\nSystem.out.println(names);\n","language":"java","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"var"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" names "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-268635"},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"LinkedHashSet"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-049000"},"children":[{"type":"text","value":"String"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":">();\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"John Carmack\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Ea\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"Cormen\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"names."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"add"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"class":"ct-141567"},"children":[{"type":"text","value":"\"FB\""}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":");\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"System.out."}]},{"type":"element","tag":"span","props":{"class":"ct-253592"},"children":[{"type":"text","value":"println"}]},{"type":"element","tag":"span","props":{"class":"ct-183901"},"children":[{"type":"text","value":"(names);"}]}]}]}]},{"type":"element","tag":"outputcode","props":{},"children":[{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"[John Carmack, Ea, Cormen, FB]"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Conforme observado, a ordem de inserção foi preservada. Pode ainda pairar alguma perplexidade quanto aos atributos "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"after"}]},{"type":"text","value":" e "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"before"}]},{"type":"text","value":" responsáveis por esse feito, mas sem preocupações; o diagrama oferece uma clara representação de como esses atributos desempenham esse papel."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"imagem mental:"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"LinkedHashSet Java","position":"auto","src":"/static/images/articles/estrutura-de-dados-java/linked-hash-set-colisao.png","width":"75%"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"vantagens-e-desvantagens"},"children":[{"type":"text","value":"Vantagens e Desvantagens"}]},{"type":"element","tag":"h5","props":{"id":"vantagens"},"children":[{"type":"text","value":"Vantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Mantém a ordem de inserção dos elementos, além de fornecer acesso rápido."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Implementação simples de uma tabela de hash com uma lista encadeada vinculada."}]}]},{"type":"element","tag":"h5","props":{"id":"desvantagens"},"children":[{"type":"text","value":"Desvantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Ligeiramente menos eficiente do que HashSet em termos de velocidade."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Ocupa ligeiramente mais espaço que HashSet devido à necessidade da lista encadeada vinculada"}]}]},{"type":"element","tag":"h4","props":{"id":"uso-comum"},"children":[{"type":"text","value":"Uso comum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Manutenção da ordem de inserção dos elementos em uma coleção semelhante ao HashSet."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Cenário de uso:"}]},{"type":"text","value":" Em um sistema de registro de eventos, um LinkedHashSet pode ser utilizado para armazenar eventos na ordem em que ocorreram, facilitando a análise cronológica."}]},{"type":"element","tag":"next-content","props":{"content":"TreeSet","linkcontent":"/articles/estrutura-de-dados-java/set/tree-set"},"children":[]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":".monokai{color:#F8F8F2;background:#272822;}.ct-049000{color:#66D9EF;font-style:italic;}.ct-183901{color:#F8F8F2;}.ct-268635{color:#F92672;}.ct-253592{color:#A6E22E;}.ct-141567{color:#E6DB74;}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"linkedhashset-como-funciona-o-hash-table-com-set-e-uma-linked-list-vinculada","depth":2,"text":"LinkedHashSet. Como funciona o Hash Table com Set e uma Linked List vinculada."},{"id":"vantagens-e-desvantagens","depth":2,"text":"Vantagens e Desvantagens"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:set:linked-hash-set.md","_source":"content","_file":"articles/estrutura-de-dados-java/set/linked-hash-set.md","_extension":"md"},{"_path":"/articles/estrutura-de-dados-java/set/tree-set","_dir":"set","_draft":false,"_partial":false,"_locale":"","title":"TreeSet","description":"TreeSet | Série - Fundamentos de Estrutura de Dados Elementar com Java.","image":{"src":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/binary-search-tree-pior-caso-x-red-black-tree.png","alt":"TreeSet Java.","width":2281,"height":742},"head":{"link":[{"rel":"canonical","href":"https://gulybyte.github.io/articles/estrutura-de-dados-java"}],"meta":[{"name":"og:url","content":"https://gulybyte.github.io/articles/estrutura-de-dados-java"},{"property":"og:title","content":"TreeSet"},{"name":"description","content":"TreeSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"excerpt","content":"TreeSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:description","content":"TreeSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"application-name","content":"TreeSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"og:site_name","content":"TreeSet | Série - Fundamentos de Estrutura de Dados Elementar com Java."},{"name":"keywords","content":"Java, Estrutura de Dados, Série, Set, TreeSet"},{"name":"og:image","content":"https://gulybyte.github.io/static/images/articles/estrutura-de-dados-java/binary-search-tree-pior-caso-x-red-black-tree.png"},{"name":"og:image:width","content":"2281"},{"name":"og:image:height","content":"742"},{"name":"og:image:type","content":"image/png"}]},"body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"treeset"},"children":[{"type":"text","value":"TreeSet."}]},{"type":"element","tag":"h1","props":{"style":"text-align: left; padding: 0em 0em !important; font-size: 2em","id":"serie-fundamentos-de-estrutura-de-dados-elementar-com-java"},"children":[{"type":"text","value":"Serie - Fundamentos de Estrutura de Dados Elementar com Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"h2","props":{"id":"treeset-como-funciona-a-red-black-tree"},"children":[{"type":"text","value":"TreeSet. Como funciona a "},{"type":"element","tag":"span","props":{"style":"color: red;"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Red"}]}]},{"type":"text","value":"-"},{"type":"element","tag":"span","props":{"style":"color: black;"},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Black"}]}]},{"type":"text","value":" "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Tree"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h5","props":{"id":"o-desafio"},"children":[{"type":"text","value":"O Desafio."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As árvores, ou \"Trees\", em sua essência, representam estruturas facilmente compreensíveis. No entanto, algumas árvores, como a AVL Tree e a Red-Black Tree, envolvem implementações complexas. No caso do TreeSet, que utiliza o TreeMap, sua implementação se baseia na "},{"type":"element","tag":"span","props":{"style":"color: red;"},"children":[{"type":"text","value":"Red"}]},{"type":"text","value":"-"},{"type":"element","tag":"span","props":{"style":"color: black;"},"children":[{"type":"text","value":"Black"}]},{"type":"text","value":" Tree. Devido à natureza avançada desta estrutura, não abordarei detalhes profundos aqui. Dentre todas as estruturas, esta será a que simplificarei ao máximo, mas a simplificação será suficiente para fornecer noções básicas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Caso deseje explorar a implementação, recomendo estudar a "},{"type":"element","tag":"span","props":{"style":"color: red;"},"children":[{"type":"text","value":"R"}]},{"type":"element","tag":"span","props":{"style":"color: black;"},"children":[{"type":"text","value":"B"}]},{"type":"text","value":"Tree apresentada no "},{"type":"element","tag":"a","props":{"href":"https://www.amazon.com.br/Introduction-Algorithms-Fourth-Thomas-Cormen/dp/026204630X/ref=sr_1_2","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"livro do Cormen"}]},{"type":"text","value":", pois a "},{"type":"element","tag":"span","props":{"style":"color: red;"},"children":[{"type":"text","value":"R"}]},{"type":"element","tag":"span","props":{"style":"color: black;"},"children":[{"type":"text","value":"B"}]},{"type":"text","value":"Tree utilizada no TreeSet é uma adaptação dessa presente no livro."}]},{"type":"element","tag":"h5","props":{"id":"como-funciona-a-tree"},"children":[{"type":"text","value":"Como Funciona a Tree?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Antes de mergulharmos na complexidade da "},{"type":"element","tag":"span","props":{"style":"color: red;"},"children":[{"type":"text","value":"Red"}]},{"type":"text","value":"-"},{"type":"element","tag":"span","props":{"style":"color: black;"},"children":[{"type":"text","value":"Black"}]},{"type":"text","value":" Tree, consideremos um exemplo mais simples de árvore: a Binary Search Tree (BST)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Tree simples estrutura de dados","src":"/static/images/articles/estrutura-de-dados-java/tree-classica.png","position":"auto","width":"30%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Outro exemplo prático: suponhamos o conjunto "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"{34, 84, 15, 0, 2, 99, 79, 9, 88, 89, 18, 31, 39, 100, 101}"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Binary Search Tree estrutura de dados","src":"/static/images/articles/estrutura-de-dados-java/binary-search-tree.png","position":"auto","width":"70%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao realizar uma pesquisa nesse conjunto, como, por exemplo, para o elemento "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"101"}]},{"type":"text","value":", em um array seria necessário percorrer todos os elementos. No entanto, na BST, como evidenciado (veja o diagrama), percorreríamos apenas 4 elementos: "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"34 -> 84 -> 99 -> 100 -> 101"}]},{"type":"text","value":". Isso é bastante eficiente, concorda?"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Observação: Ao apresentar um conjunto, significa que os elementos foram inseridos na ordem em que aparecem. Além disso, é importante destacar que demonstro o conjunto e, em seguida, como ele é organizado na árvore. Contudo, não entro em detalhes sobre por que a árvore se organiza dessa maneira, uma vez que, conforme especificado, não discutirei a implementação para melhor didática. Caso queira testar seus próprios conjuntos, "},{"type":"element","tag":"a","props":{"href":"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"consulte isso"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"No entanto, a BST (e outras Trees) apresenta um problema: ela pode facilmente se desequilibrar. A BST distribui os elementos menores à esquerda e os maiores à direita, seguindo a sequência de inserção. Em alguns casos, como o conjunto "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"{99, 89, 100, 101, 102, 103, 104, 105, 106}"}]},{"type":"text","value":", a árvore pode se tornar desbalanceada."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Binary Search Tree Pior Caso estrutura de dados","src":"/static/images/articles/estrutura-de-dados-java/binary-search-tree-pior-caso.png","position":"auto","width":"60%"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Agora, pense: para encontrar o elemento "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"106"}]},{"type":"text","value":", precisamos percorrer quase toda a árvore. Nesses casos, surge a necessidade de uma árvore de busca balanceada. Existem várias implementações que atendem a essa necessidade, e a utilizada no TreeSet é a "},{"type":"element","tag":"span","props":{"style":"color: red;"},"children":[{"type":"text","value":"Red"}]},{"type":"text","value":"-"},{"type":"element","tag":"span","props":{"style":"color: black;"},"children":[{"type":"text","value":"Black"}]},{"type":"text","value":" Tree."}]},{"type":"element","tag":"h2","props":{"id":"como-funciona-a-rb-tree"},"children":[{"type":"text","value":"Como funciona a "},{"type":"element","tag":"span","props":{"style":"color: red;"},"children":[{"type":"text","value":"R"}]},{"type":"element","tag":"span","props":{"style":"color: black;"},"children":[{"type":"text","value":"B"}]},{"type":"text","value":" Tree?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A diferença fundamental entre a "},{"type":"element","tag":"span","props":{"style":"color: red;"},"children":[{"type":"text","value":"Red"}]},{"type":"text","value":"-"},{"type":"element","tag":"span","props":{"style":"color: black;"},"children":[{"type":"text","value":"Black"}]},{"type":"text","value":" Tree e a BST é que a "},{"type":"element","tag":"span","props":{"style":"color: red;"},"children":[{"type":"text","value":"R"}]},{"type":"element","tag":"span","props":{"style":"color: black;"},"children":[{"type":"text","value":"B"}]},{"type":"text","value":"Tree possui um campo que \"define as cores\", sendo elas "},{"type":"element","tag":"span","props":{"style":"color: red;"},"children":[{"type":"text","value":"Vermelho ("},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"R"}]},{"type":"text","value":"ed)"}]},{"type":"text","value":" e "},{"type":"element","tag":"span","props":{"style":"color: black;"},"children":[{"type":"text","value":"Preto ("},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"B"}]},{"type":"text","value":"lack)"}]},{"type":"text","value":". Vale ressaltar que essas \"cores\" são representadas, na realidade, por um campo de 1 bit (boolean), geralmente associando o bit 1 à cor vermelha e o bit 0 à cor preta."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"A partir de agora, chamaremos os elementos da árvore pelo nome correto, que é \"Nó\" (Node)!"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O nó raiz (o primeiro) é sempre preto, e por padrão, ao criar um novo nó, ele será vermelho. A regra geral é que um nó vermelho só pode ter nós pais e filhos da cor preta. Os últimos nós (comumente chamados de \"folhas\") são nós vazios, que servem principalmente para garantir que os ponteiros dos verdadeiros últimos nós não sejam nulos, seguindo a regra das cores. A Red-Black Tree consegue reequilibrar esses nós por meio de rotações (basicamente, uma troca de ponteiros) de modo a manter a árvore bem balanceada. Veja um exemplo com nossos conjuntos anteriores ("},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"{34, 84, 15, 0, 2, 99, 79, 9, 88, 89, 18, 31, 39, 100, 101}"}]},{"type":"text","value":" e "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"{99, 89, 100, 101, 102, 103, 104, 105, 106}"}]},{"type":"text","value":"):"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Binary Search Tree x Red-Black Tree estrutura de dados","src":"/static/images/articles/estrutura-de-dados-java/binary-search-tree-x-red-black-tree.png"},"children":[]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"no pior caso (note o balanceamente):"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Binary Search Tree Pior Caso x Red-Black Tree estrutura de dados","src":"/static/images/articles/estrutura-de-dados-java/binary-search-tree-pior-caso-x-red-black-tree.png"},"children":[]}]},{"type":"element","tag":"h4","props":{"id":"ok-mas-e-o-treeset"},"children":[{"type":"text","value":"Ok. Mas e o TreeSet?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O TreeSet opera com base nesse conceito, com a diferença de que não são permitidos nós repetidos. Além disso, no TreeSet, o conceito de Árvore Vermelho e Preta (Red-Black Tree) é estendido para manter a ordenação. Essa ordenação é mantida por meio de um conjunto que utiliza a ordem natural, quer um "},{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/util/Comparator.html","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"comparador"}]},{"type":"text","value":" explícito seja fornecido ou não. Dessa forma, temos o HashSet sem ordenação, o LinkedHashSet ordenando apenas por inserção e o TreeSet utilizando um "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"Comparator"}]},{"type":"text","value":"."}]},{"type":"element","tag":"h2","props":{"id":"vantagens-e-desvantagens"},"children":[{"type":"text","value":"Vantagens e Desvantagens"}]},{"type":"element","tag":"h5","props":{"id":"vantagens"},"children":[{"type":"text","value":"Vantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Mantém os elementos em ordem natural ou com base em um comparador, permitindo a realização de operações eficientes de conjunto."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Implementação de árvore "},{"type":"element","tag":"span","props":{"style":"color: red;"},"children":[{"type":"text","value":"Red"}]},{"type":"text","value":"-"},{"type":"element","tag":"span","props":{"style":"color: black;"},"children":[{"type":"text","value":"Black"}]},{"type":"text","value":" Tree eficiente."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Suporta operações como encontrar o elemento sucessor ou predecessor."}]}]},{"type":"element","tag":"h5","props":{"id":"desvantagens"},"children":[{"type":"text","value":"Desvantagens"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Operações de inserção, remoção e pesquisa podem ter desempenho ligeiramente inferior em comparação com HashSet (apenas para os melhores casos)."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":" -"}]},{"type":"text","value":" Ocupa mais espaço que HashSet devido à necessidade de armazenar nós adicionais na árvore."}]}]},{"type":"element","tag":"h4","props":{"id":"uso-comum"},"children":[{"type":"text","value":"Uso comum"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Manutenção de elementos ordenados em uma coleção, útil em cenários que exigem iteração em ordem."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Cenário de uso:"}]},{"type":"text","value":" Em um sistema de calendário, um TreeSet pode ser usado para armazenar os compromissos agendados, garantindo que eles sejam recuperados e exibidos na ordem correta."}]},{"type":"element","tag":"next-content","props":{"content":"Fim da Série. Retorne a home.","linkcontent":"/articles"},"children":[]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"treeset-como-funciona-a-red-black-tree","depth":2,"text":"TreeSet. Como funciona a Red-Black Tree."},{"id":"como-funciona-a-rb-tree","depth":2,"text":"Como funciona a RB Tree?"},{"id":"vantagens-e-desvantagens","depth":2,"text":"Vantagens e Desvantagens"}]}},"_type":"markdown","_id":"content:articles:estrutura-de-dados-java:set:tree-set.md","_source":"content","_file":"articles/estrutura-de-dados-java/set/tree-set.md","_extension":"md"},{"_path":"/no-seo/hash-resumo-7bb19b9b-f343-4182-bdbb-718c21a64509","_dir":"no-seo","_draft":false,"_partial":false,"_locale":"","title":"O que é um hash? (na computação)","description":"Em termos simples, um hash é como a \"impressão digital\" de um conjunto de dados. É uma operação que converte informações, seja uma simples string, um número, ou até mesmo dados binários, em uma cadeia de caracteres de tamanho fixo. Essa transformação é unidirecional, ou seja, a mesma entrada sempre resultará no mesmo hash de saída. É como ter uma digital única para cada entrada.","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"o-que-é-um-hash-na-computação"},"children":[{"type":"text","value":"O que é um hash? (na computação)"}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Em termos simples, um hash é como a \"impressão digital\" de um conjunto de dados. É uma operação que converte informações, seja uma simples string, um número, ou até mesmo dados binários, em uma cadeia de caracteres de tamanho fixo. Essa transformação é unidirecional, ou seja, a mesma entrada sempre resultará no mesmo hash de saída. É como ter uma digital única para cada entrada."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","src":"/static/images/no-seo/7bb19b9b-f343-4182-bdbb-718c21a64509.png","width":"50%"},"children":[]}]},{"type":"element","tag":"h4","props":{"id":"para-que-serve-um-hash"},"children":[{"type":"text","value":"Para que serve um hash?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Vamos tornar isso mais tangível com um exemplo prático. Digamos que você tenha uma base de dados com imagens pesadas, e por um descuido, acaba salvando uma imagem duplicada. Agora, você tem o dobro do espaço ocupado! Uma abordagem seria comparar bit a bit entre as imagens, mas isso seria ineficiente. É aqui que o hash brilha."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Ao aplicar um hash à imagem, você obtém uma sequência fixa, como "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"e2084f90405b2a"}]},{"type":"text","value":". Armazenando essa string única junto com a imagem na base de dados, você pode facilmente evitar duplicatas. Ao salvar uma nova imagem, basta calcular o hash dela e comparar com os hashes existentes das outras imagens. Comparar strings é muito mais eficiente do que comparar imagens inteiras!"}]},{"type":"element","tag":"h4","props":{"id":"unicidade-e-irreversibilidade"},"children":[{"type":"text","value":"Unicidade e Irreversibilidade"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O fascínio do hash reside em sua unicidade e irreversibilidade. Embora casos raros de colisão (duas entradas diferentes gerando o mesmo hash) possam ocorrer, dependendo da função hash utilizada, como o robusto SHA256, as chances são praticamente nulas. Estamos falando de probabilidades da ordem de 0 a 1 milhão, tornando a chance de colisão praticamente zero (infinitesimal)."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Assim como uma impressão digital, o hash torna-se uma marca única e, ao mesmo tempo, protege informações valiosas. Sua natureza unidirecional adiciona uma camada extra de segurança, sendo particularmente valiosa em contextos criptográficos."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:no-seo:hash-resumo-7bb19b9b-f343-4182-bdbb-718c21a64509.md","_source":"content","_file":"no-seo/hash-resumo-7bb19b9b-f343-4182-bdbb-718c21a64509.md","_extension":"md"},{"_path":"/no-seo/hashcode-java-9f3be809-394c-4bee-8e67-21a2ca50e52f","_dir":"no-seo","_draft":false,"_partial":false,"_locale":"","title":"O metodo hashCode() da linguagem de programação Java.","description":"O hashCode() é a função de hash padrão do Java. Porém, ela é, de certa forma bastante exotica se comparado ao padrão que geralmente as funções hash seguem, padrões tais como:","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"o-metodo-hashcode-da-linguagem-de-programação-java"},"children":[{"type":"text","value":"O metodo "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" da linguagem de programação Java."}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"O "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" é a função de hash padrão do Java. Porém, ela é, de certa forma bastante exotica se comparado ao padrão que geralmente as funções hash seguem, padrões tais como:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ao invés do padrão que é gerar uma cadeia de caracteres, o "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" gera um número inteiro;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ao invés do padrão de ter uma unicidade forte, por conta do "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" usar um número inteiro, sua unicidade não é muito forte (o que gera colisões de hash);"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ao invés do padrão de ter tamanho fixo, o "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" não se preocupa em ter tamanho fixo;"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"ao invés do mesmo dado gerar sempre o mesmo hash, o "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" (apesar de ser casos raros) nem sempre "},{"type":"element","tag":"a","props":{"href":"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Object.html#hashCode()","rel":["nofollow"],"target":"_blank"},"children":[{"type":"text","value":"gera os mesmos hashes"}]},{"type":"text","value":" para as mesmas entradas dependendo da execução da aplicação."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Mas essas coisas não nescessariamente são um problema, afinal existem diferentes tipos de hash, e cada um é para um uso especifico, no caso de "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" é ter uma velocidade rápida para gerar hash sem nescessariamente precisar ter alta unicidade, ou sem nescessariamente ter tamanho fixo. Ou então o caso de não manter consistencia entre execuções (que depende de fatores diversos, como OS, JVM e GC), não é nescessariamente um problemas pois o "},{"type":"element","tag":"code","props":{"tag":"true"},"children":[{"type":"text","value":"hashCode()"}]},{"type":"text","value":" é feito para se trabalhar nas estruturas de dados do Java durante a execução da aplicação, e não para persistir esses hashes."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:no-seo:hashcode-java-9f3be809-394c-4bee-8e67-21a2ca50e52f.md","_source":"content","_file":"no-seo/hashcode-java-9f3be809-394c-4bee-8e67-21a2ca50e52f.md","_extension":"md"},{"_path":"/no-seo/virtual-memory-4522-bd13-c7dc7eac996d","_dir":"no-seo","_draft":false,"_partial":false,"_locale":"","title":"Virtual Memory Resumão","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"virtual-memory-resumão"},"children":[{"type":"text","value":"Virtual Memory Resumão"}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"É uma matéria "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"low-level"}]},{"type":"text","value":". Geralmente é visto ao estudar sobre C, assembly ou arquitetura de computadores."}]}]},{"type":"element","tag":"hr","props":{"id":""},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Virtual Memory"}]},{"type":"text","value":" é uma técnica que usa a memória secundária como um cache para armazenamento secundário. É usada para compartilhamento seguro e eficiente da memória entre programas."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"A "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Virtual Memory"}]},{"type":"text","value":" é divida em vários segmentos, os principais são: "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Stack"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Heap"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"Text"}]},{"type":"text","value":", "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"ROData"}]},{"type":"text","value":" e "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"BSS"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"","position":"auto","src":"/static/images/no-seo/4522-bd13-c7dc7eac996d.png","width":"12%"},"children":[]}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Virtual Memory"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Ultilidade"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Stack"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Armazena dados temórarios, como ponteiros armazenados na Heap. Ela cresce e diminui automaticamente a medida que dados são retirados ou inseridos."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Heap"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Armazena dados durante a execução de um programa, dados esses gerenciados pelo programador ou por um Garbage Collector. É um espaço de memória dinâmico que cresce ou diminui conforme a nescessidade."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Text"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Contém o código exécutavel do programa, instruções assembly para a máquina. É um segmento estático, apenas de leitura."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"ROData"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Segmento de dados somente de leitura, como constantes hardcoded no código, paramentros entre funções que não mudam (depende do compilador), e outras coisas. É um segmento estático."}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"BSS"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Onde é armazenado variaveis globais estaticas que não foi atribuido nenhum valor, o que estão com valores "},{"type":"element","tag":"code","props":{},"children":[{"type":"text","value":"null"}]},{"type":"text","value":". É um segmento estático."}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:no-seo:virtual-memory-4522-bd13-c7dc7eac996d.md","_source":"content","_file":"no-seo/virtual-memory-4522-bd13-c7dc7eac996d.md","_extension":"md"}],"navigation":[{"title":"Articles","_path":"/articles","children":[{"title":"Estrutura de Dados com Java","_path":"/articles/estrutura-de-dados-java","children":[{"title":"Estrutura de Dados com Java","_path":"/articles/estrutura-de-dados-java"},{"title":"Olá hehe","_path":"/articles/estrutura-de-dados-java/links-ref"},{"title":"Listas","_path":"/articles/estrutura-de-dados-java/list","children":[{"title":"ArrayList","_path":"/articles/estrutura-de-dados-java/list/array-list"},{"title":"Listas","_path":"/articles/estrutura-de-dados-java/list"},{"title":"LinkedList","_path":"/articles/estrutura-de-dados-java/list/linked-list"},{"title":"Stack","_path":"/articles/estrutura-de-dados-java/list/stack"},{"title":"Vector","_path":"/articles/estrutura-de-dados-java/list/vector"}]},{"title":"Map's","_path":"/articles/estrutura-de-dados-java/map","children":[{"title":"HashMap","_path":"/articles/estrutura-de-dados-java/map/hash-map"},{"title":"Map's","_path":"/articles/estrutura-de-dados-java/map"}]},{"title":"Queue's","_path":"/articles/estrutura-de-dados-java/queue","children":[{"title":"ArrayDeque","_path":"/articles/estrutura-de-dados-java/queue/array-deque"},{"title":"Queue's","_path":"/articles/estrutura-de-dados-java/queue"},{"title":"PriorityQueue","_path":"/articles/estrutura-de-dados-java/queue/priority-queue"}]},{"title":"Set's","_path":"/articles/estrutura-de-dados-java/set","children":[{"title":"HashSet","_path":"/articles/estrutura-de-dados-java/set/hash-set"},{"title":"Set's","_path":"/articles/estrutura-de-dados-java/set"},{"title":"LinkedHashSet","_path":"/articles/estrutura-de-dados-java/set/linked-hash-set"},{"title":"TreeSet","_path":"/articles/estrutura-de-dados-java/set/tree-set"}]}]}]},{"title":"No Seo","_path":"/no-seo","children":[{"title":"O que é um hash? (na computação)","_path":"/no-seo/hash-resumo-7bb19b9b-f343-4182-bdbb-718c21a64509"},{"title":"O metodo hashCode() da linguagem de programação Java.","_path":"/no-seo/hashcode-java-9f3be809-394c-4bee-8e67-21a2ca50e52f"},{"title":"Virtual Memory Resumão","_path":"/no-seo/virtual-memory-4522-bd13-c7dc7eac996d"}]}]}